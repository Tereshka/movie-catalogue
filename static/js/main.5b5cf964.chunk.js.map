{"version":3,"sources":["img/no_poster.jpg","img/no_poster_album.jpg","api/api.js","redux/movie/movieTypes.js","redux/movie/movieActions.js","redux/auth/authActions.js","redux/auth/authTypes.js","hoc/withAuth.jsx","hoc/withMovie.jsx","components/Header/UserMenu.jsx","components/Header/Header.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/UIComponents/ActionIcons.jsx","components/Movies/MovieCard.jsx","components/Movies/MovieContainer.jsx","components/Movies/MovieWillWatchContainer.jsx","components/Movies/MovieTabs.jsx","components/Pagination/PaginationItem.jsx","components/Pagination/Pagination.jsx","components/Filters/YearSelector.jsx","components/Filters/GenresSelector.jsx","components/pages/MoviesPage.jsx","components/Movie/MovieCredit.jsx","components/Movie/MovieDetail.jsx","components/Movie/MovieVideo.jsx","components/pages/MoviePage.jsx","components/pages/FavoritePage.jsx","components/pages/WillWatchPage.jsx","components/App.jsx","utils/cookies.js","redux/auth/authReducers.js","redux/movie/movieReducers.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","API_URL","process","API_KEY","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","data","catch","res","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","startLoading","dispatch","type","stopLoading","clearAllUserData","fetchMoviesFavorite","user","session_id","get","id","updateMoviesFavorite","results","movies","payload","fetchMoviesWillWatch","updateMoviesWillWatch","fetchGenres","genres","fetchMovies","page","getState","movie","sortBy","currentYear","genresSelected","forEach","el","sort_by","primary_release_year","with_genres","totalPages","total_pages","setSortBy","value","setCurrentYear","setActivePage","setSelectedGenres","checked","newGenres","push","parseInt","filter","clearAllFilters","setFavouriteMovie","favorite","auth","sessionId","moviesFavourite","post","media_type","media_id","status_code","newMoviesFavourite","m","setWatchList","watchlist","moviesWillWatch","newMoviesWillWatch","fetchMovieById","clearCurrentMovie","fetchMovieVideosById","fetchMovieActorsById","cast","login","username","password","a","token","request_token","tokenWithLogin","session","fetchAuth","console","log","updateAuth","userLogout","delete","logout","toggleLoginModal","clearLoginErrors","mapStateToProps","state","mapDispatchToProps","authActions","bindActionCreators","withAuth","Component","connect","React","render","this","props","movieActions","withMovie","UserMenu","dropdownOpen","toggle","setState","prevState","handleLogOut","Dropdown","isOpen","DropdownToggle","tag","data-toggle","aria-expanded","onClick","className","alt","src","avatar","gravatar","hash","DropdownMenu","right","DropdownItem","to","LoginForm","repeatPassword","errors","submitting","onChangeInput","event","name","target","base","handleBlur","validateFields","length","onLogin","preventDefault","Object","keys","sendPromisesAsync","htmlFor","placeholder","onChange","onBlur","disabled","Modal","showLoginModal","ModalBody","currentMovie","isInArray","array","map","find","isFavourite","inWatchList","Favorite","color","FavoriteBorder","Bookmark","BookmarkBorder","MovieCard","title","backdrop_path","overview","vote_average","noPoster","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","key","index","list","onChangeSortBy","Pagination","label","active","onClickPage","item","activePage","items","minPage","Math","max","maxPage","min","year","onChangeCheckbox","genre","includes","useEffect","GenresSelector","currentMovieActors","isLoading","Spinner","style","width","height","CardGroup","actor","i","Card","inverse","maxWidth","CardImg","profile_path","CardImgOverlay","CardText","Badge","character","Table","tagline","vote_count","pill","runtime","release_date","production_countries","country","currentMovieVideos","video","href","rel","movieId","match","poster_path","Nav","tabs","NavItem","path","App","componentDidMount","isAuth","basename","exact","cookies","Cookies","initialState","authReducer","action","status_message","Date","getFullYear","movieReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","next","set","maxAge","remove","ReactDOM","document","getElementById"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,k/CCE3C,MAAMC,EAAUC,+BACVC,EAAUD,mCAEHE,EAAW,CAACC,EAAKC,EAAU,KAC/B,IAAIC,QAAQ,CAACC,EAASC,KAC3BC,MAAML,EAAKC,GACRK,KAAKC,IACJ,GAAIA,EAASC,OAAS,IACpB,OAAOD,EAASE,OAEhB,MAAMF,IAGTD,KAAKI,IACJP,EAAQO,KAETC,MAAMC,IAELA,EAAIH,OAAOH,KAAKO,IACdT,EAAOS,SAMF,MAAMC,EACnB,WAAWd,EAAKC,EAAU,IAAK,MAAD,EACNA,EAAfc,cADqB,MACZ,GADY,EAGtBC,EAAiB,aACrBC,QAASnB,GACNiB,GAGL,OAAOhB,EAAS,GAAD,OAAIH,GAAJ,OAAcI,EAAd,YAAqBkB,IAAYC,UAAUH,IAAsB,CAC9EI,KAAM,OACNC,QAAS,CACP,eAAgB,sBAKtB,YAAYrB,EAAKC,EAAU,IAAK,MAAD,EACIA,EAA1Bc,cADsB,MACb,GADa,IACId,EAAbqB,YADS,MACF,GADE,EAGvBN,EAAiB,aACrBC,QAASnB,GACNiB,GAGL,OAAOhB,EAAS,GAAD,OAAIH,GAAJ,OAAcI,EAAd,YAAqBkB,IAAYC,UAAUH,IAAsB,CAC9EO,OAAQ,OACRH,KAAM,OACNC,QAAS,CACP,eAAgB,oBAElBC,KAAME,KAAKL,UAAUG,KAIzB,cAActB,EAAKC,EAAU,IAAK,MAAD,EACEA,EAA1Bc,cADwB,MACf,GADe,IACEd,EAAbqB,YADW,MACJ,GADI,EAGzBN,EAAiB,aACrBC,QAASnB,GACNiB,GAGL,OAAOhB,EAAS,GAAD,OAAIH,GAAJ,OAAcI,EAAd,YAAqBkB,IAAYC,UAAUH,IAAsB,CAC9EO,OAAQ,SACRH,KAAM,OACNC,QAAS,CACP,eAAgB,oBAElBC,KAAME,KAAKL,UAAUG,MC5EpB,MCGMG,EAAe,IAAMC,IAChCA,EAAS,CAACC,KDJiB,mBCOhBC,EAAc,IAAMF,IAC/BA,EAAS,CAACC,KDPgB,kBCUfE,EAAmB,IAAMH,IACpCA,EAAS,CAACC,KDauB,yBCVtBG,EAAsB,EAAGC,OAAMC,gBAAiBN,IAC3DZ,EAAQmB,IAAR,mBAAwBF,EAAKG,GAA7B,oBAAmD,CACjDnB,OAAQ,CACNiB,gBAED1B,KAAKI,IACNgB,EAASS,EAAqBzB,EAAK0B,aAI1BD,EAAuBE,IAC3B,CACLV,KDzBkC,yBC0BlCW,QAASD,IAIAE,EAAuB,EAAGR,OAAMC,gBAAiBN,IAC5DZ,EAAQmB,IAAR,mBAAwBF,EAAKG,GAA7B,qBAAoD,CAClDnB,OAAQ,CACNiB,gBAED1B,KAAKI,IACNgB,EAASc,EAAsB9B,EAAK0B,aAI3BI,EAAwBH,IAC5B,CACLV,KDzCoC,2BC0CpCW,QAASD,IAIAI,EAAc,IAAMf,IAC/BA,EAAS,CACPC,KD/CwB,iBCkD1Bb,EAAQmB,IAAI,qBACT3B,KAAKI,GACJgB,EAAS,CACPC,KDpD4B,uBCqD5BW,QAAS5B,EAAKgC,UAEhB/B,MAAME,GACNa,EAAS,CACPC,KDxD0B,qBCyD1BW,QAASzB,MAKJ8B,EAAc,CAACC,EAAO,IAAM,CAAClB,EAAUmB,KAClDnB,EAAS,CACPC,KD/DwB,iBC6DqC,QAKfkB,IAAWC,MAAnDC,EALuD,EAKvDA,OAAQC,EAL+C,EAK/CA,YAAaC,EALkC,EAKlCA,eAC7B,IAAIP,EAAS,GACbO,EAAeC,QAAQC,GAAMT,GAAUS,EAAK,KAE5C,MAAMnC,EAAoB,CACxBoC,QAASL,EACTH,KAAMA,EACNS,qBAAsBL,EACtBM,YAAaZ,GAGf5B,EAAQmB,IAAI,kBAAmB,CAAElB,OAAQC,IACtCV,KAAKI,GACJgB,EAAS,CACPC,KD/E4B,uBCgF5BW,QAAS,CACPD,OAAQ3B,EAAK0B,QACbmB,WAAY7C,EAAK8C,gBAGrB7C,MAAME,GACNa,EAAS,CACPC,KDtF0B,qBCuF1BW,QAASzB,MAKJ4C,EAAYC,GAAShC,IAChCA,EAAS,CACPC,KD7FuB,cC8FvBW,QAASoB,KAIAC,EAAiBD,GAAShC,IACrCA,EAAS,CACPC,KDnG4B,mBCoG5BW,QAASoB,KAIAE,EAAgBF,GAAShC,IACpCA,EAAS,CACPC,KDzG2B,kBC0G3BW,QAASoB,KAIAG,EAAoB,EAAEC,UAASJ,WAAW,CAAChC,EAAUmB,KAChE,IAAIkB,EAAY,IAAIlB,IAAWC,MAAMG,gBACjCa,EACFC,EAAUC,KAAKC,SAASP,IAExBK,EAAYlB,IAAWC,MAAMG,eAAeiB,OAAOf,GAAMA,IAAOc,SAASP,IAG3EhC,EAAS,CACPC,KDtH+B,sBCuH/BW,QAASyB,KAIAI,EAAkBT,GAAShC,IACtCA,EAAS,CACPC,KD5H6B,uBCgIpByC,EAAoB,CAACtB,EAAOuB,IAAa,CAAC3C,EAAUmB,KAAc,MAAD,EAChDA,IAAWyB,KAA/BvC,EADoE,EACpEA,KAAMwC,EAD8D,EAC9DA,UACNC,EAAoB3B,IAAWC,MAA/B0B,gBACR1D,EAAQ2D,KAAR,mBAAyB1C,EAAKG,GAA9B,aAA6C,CAC3CnB,OAAQ,CACNiB,WAAYuC,GAEdjD,KAAM,CACJoD,WAAY,QACZC,SAAU7B,EAAMZ,GAChBmC,SAAUA,KAEX/D,KAAMM,IACP,GAAwB,IAApBA,EAAIgE,aAAyC,KAApBhE,EAAIgE,YAAoB,CACnD,IAAIC,EACCR,GAGHQ,EAAqB,IAAIL,GACzBK,EAAmBb,KAAKlB,IAHxB+B,EAAqBL,EAAgBN,OAAOY,GAAKA,EAAE5C,KAAOY,EAAMZ,IAKlER,EAASS,EAAqB0C,QAKvBE,EAAe,CAACjC,EAAOkC,IAAc,CAACtD,EAAUmB,KAAc,MAAD,EAC9CA,IAAWyB,KAA9BvC,EADiE,EACjEA,KAAMwC,EAD2D,EAC3DA,UACLU,EAAoBpC,IAAWC,MAA/BmC,gBACRnE,EAAQ2D,KAAR,mBAAyB1C,EAAKG,GAA9B,cAA8C,CAC5CnB,OAAQ,CACNiB,WAAYuC,GAEdjD,KAAM,CACJoD,WAAY,QACZC,SAAU7B,EAAMZ,GAChB8C,UAAWA,KAEZ1E,KAAMM,IACP,GAAwB,IAApBA,EAAIgE,aAAyC,KAApBhE,EAAIgE,YAAoB,CACnD,IAAIM,EACCF,GAGHE,EAAqB,IAAID,GACzBC,EAAmBlB,KAAKlB,IAHxBoC,EAAqBD,EAAgBf,OAAOY,GAAKA,EAAE5C,KAAOY,EAAMZ,IAKlER,EAASc,EAAsB0C,QAKxBC,EAAiBjD,GAAMR,IAClCA,EAAS,CACPC,KDpMyB,kBCsM3BD,EAAS,CACPC,KDxL6B,sBC2L/Bb,EAAQmB,IAAR,iBAAsBC,IACnB5B,KAAKI,IACJgB,EAAS,CACPC,KD7LiC,4BC8LjCW,QAAS5B,IAEXgB,EAAS,CACPC,KDhNoB,mBCkNrBhB,MAAME,IACPa,EAAS,CACPC,KDpM+B,0BCqM/BW,QAASzB,IAEXa,EAAS,CACPC,KDxNoB,oBC6NfyD,EAAoB,IAAM1D,IACrCA,EAAS,CACPC,KD9M+B,yBCkNtB0D,EAAuBnD,GAAMR,IACxCA,EAAS,CACPC,KDtOyB,kBCyO3BD,EAAS,CACPC,KDvNoC,6BC0NtCb,EAAQmB,IAAR,iBAAsBC,EAAtB,YACG5B,KAAKI,IACJgB,EAAS,CACPC,KD5NwC,mCC6NxCW,QAAS5B,EAAK0B,UAEhBV,EAAS,CACPC,KDnPoB,mBCqPrBhB,MAAME,GACPa,EAAS,CACPC,KDnOsC,iCCoOtCW,QAASzB,MAKJyE,EAAuBpD,GAAMR,IACxCA,EAAS,CACPC,KDhQyB,kBCmQ3BD,EAAS,CACPC,KD9OoC,6BCiPtCb,EAAQmB,IAAR,iBAAsBC,EAAtB,aACG5B,KAAKI,IACJgB,EAAS,CACPC,KDnPwC,mCCoPxCW,QAAS5B,EAAK6E,OAEhB7D,EAAS,CACPC,KD7QoB,mBC+QrBhB,MAAME,GACPa,EAAS,CACPC,KD1PsC,iCC2PtCW,QAASzB,MC/QJ2E,EAAQ,EAAEC,WAAUC,cAAZ,uCAA0B,WAAMhE,GAAN,mBAAAiE,EAAA,sEAE3CjE,EAAS,CACPC,KCCuB,kBDJkB,SAMvBb,EAAQmB,IAAI,6BANW,cAMrC2D,EANqC,gBAOd9E,EAAQ2D,KAAK,4CAA6C,CACrFnD,KAAM,CACJmE,SAAUA,EACVC,SAAUA,EACVG,cAAeD,EAAMC,iBAXkB,cAOrCC,EAPqC,iBAerBhF,EAAQ2D,KAAK,8BAA+B,CAChEnD,KAAM,CACJuE,cAAeC,EAAeD,iBAjBS,QAerCE,EAfqC,OAqB3CrE,EAASsE,EAAUD,EAAQ/D,aArBgB,kDAuB3CN,EAAS,CACPC,KCnB6B,sBDoB7BW,QAAQ,EAAD,KAET2D,QAAQC,IAAI,QAAZ,MA3B2C,0DAA1B,sDA+BRF,EAAYhE,GAAcN,IACrCA,EAAS,CACPC,KCnC8B,uBDsChCb,EAAQmB,IAAI,WAAY,CACtBlB,OAAQ,CACNiB,gBAED1B,KAAKyB,IACNL,EAASyE,EAAW,CAAEpE,OAAMC,gBAC5BN,EAASI,EAAoB,CAAEC,OAAMC,gBACrCN,EAASa,EAAqB,CAAER,OAAMC,kBACrCrB,MAAME,IACPa,EAAS,CACPC,KC9C0B,mBD+C1BW,QAASzB,OAKFsF,EAAa,EAAGpE,OAAMC,iBAAT,CACxBL,KCtDgC,qBDuDhCW,QAAS,CACPP,OACAC,gBAISoE,EAAapE,GAAcN,IACtCA,EAAS,CACPC,KC7D0B,mBDgE5Bb,EAAQuF,OAAO,0BAA2B,CAAE/E,KAAM,CAAEU,gBACjD1B,KAAK,IAAMoB,EAAS4E,MACpB3F,MAAME,IACLa,EAAS,CACPC,KCnE4B,uBDoE5BW,QAASzB,OAKJyF,EAAS,KACb,CACL3E,KC1EkC,2BD8EzB4E,EAAmB,KACvB,CACL5E,KCtF8B,uBD0FrB6E,EAAmB,KACvB,CACL7E,KClF8B,uBCL5B8E,EAAkBC,IACf,CACLpC,KAAMoC,EAAMpC,OAIVqC,EAAqBjF,IAAQ,CACjCkF,YAAaC,6BAAmBD,EAAalF,KAGlCoF,EAAWC,GACtBC,YAAQP,EAAiBE,EAAzBK,CACE,cAAuBC,IAAMF,UAC3BG,SACE,OAAQ,kBAACH,EAAcI,KAAKC,UCd9BX,EAAkBC,IACf,CACL5D,MAAO4D,EAAM5D,QAIX6D,GAAqBjF,IAAQ,CACjC2F,aAAcR,6BAAmBQ,EAAc3F,KAGpC4F,GAAYP,GACvBC,YAAQP,EAAiBE,GAAzBK,CACE,cAAwBC,IAAMF,UAC5BG,SACE,OAAQ,kBAACH,EAAcI,KAAKC,U,4CCdpC,MAAMG,WAAiBN,IAAMF,UAAW,eAAD,oBACrCL,MAAQ,CACNc,cAAc,GAFqB,KAKrCC,OAAS,KACPN,KAAKO,SACHC,IAAS,CACPH,cAAeG,EAAUH,iBARM,KAarCI,aAAe,KACbT,KAAKC,MAAMR,YAAYR,WAAWe,KAAKC,MAAM9C,KAAKC,WAClD4C,KAAKC,MAAMC,aAAaxF,oBAG1BqF,SAAU,MACDM,EAAgBL,KAAKT,MAArBc,aACQzF,EAAUoF,KAAKC,MAAvB9C,KAAQvC,KACf,OACE,kBAAC8F,GAAA,EAAD,CAAUC,OAAQN,EAAcC,OAAQN,KAAKM,QAC3C,kBAACM,GAAA,EAAD,CACEC,IAAI,MACJC,cAAY,WACZC,gBAAeV,GAEf,yBAAKW,QAAShB,KAAKM,QACjB,yBACEW,UAAU,eACVC,IAAI,SACJC,IAAG,6CAAwCvG,EAAKwG,OAAOC,SAASC,KAA7D,gBAEL,0BAAML,UAAU,cAAcrG,EAAK0D,YAGvC,kBAACiD,GAAA,EAAD,CAAcC,OAAK,GACjB,kBAACC,GAAA,EAAD,CAAcT,QAAShB,KAAKS,cAA5B,UAGA,kBAACgB,GAAA,EAAD,CAAcT,QAAShB,KAAKM,QAC1B,kBAAC,IAAD,CAAMoB,GAAI,aAAV,uBAEF,kBAACD,GAAA,EAAD,CAAcT,QAAShB,KAAKM,QAC1B,kBAAC,IAAD,CAAMoB,GAAI,cAAV,0BAQG/B,SAASQ,GAAUC,KC/BnBT,UAtBf,SAAgBM,GAAQ,MACd9C,EAAsB8C,EAAtB9C,KAAMsC,EAAgBQ,EAAhBR,YACd,OACE,yBAAKwB,UAAU,yCACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,KAA9B,UAGFvE,EAAKvC,KACH,kBAAC,GAAD,MACA,4BACEqG,UAAU,uCACVzG,KAAK,SACLwG,QAASvB,EAAYL,kBAHvB,c,oBCdV,MAAMuC,WAAkB7B,IAAMF,UAAW,eAAD,oBAEtCL,MAAQ,CACNjB,SAAU,GACVC,SAAU,GACVqD,eAAgB,GAChBC,OAAQ,GACRC,YAAY,GAPwB,KAUtCC,cAAgBC,IACd,MAAMC,EAAOD,EAAME,OAAOD,KACpB1F,EAAQyF,EAAME,OAAO3F,MAC7ByD,KAAKO,SAASC,IAAS,CACnB,CAACyB,GAAO1F,EACRsF,OAAO,2BACFrB,EAAUqB,QADT,IAEJM,KAAM,KACN,CAACF,GAAO,WAlBwB,KAuBtCG,WAAcJ,IAAW,MAChBC,EAAQD,EAAME,OAAdD,KAEDvI,EADSsG,KAAKqC,iBACCJ,GAEjBvI,GACFsG,KAAKO,SAASC,IAAS,CACrBqB,OAAO,2BACFrB,EAAUqB,QADT,IAEJ,CAACI,GAAOvI,OAIdsG,KAAKC,MAAMR,YAAYJ,oBApCa,KAuCtCgD,eAAiB,KACf,MAAMR,EAAS,GAiBf,MAf4B,KAAxB7B,KAAKT,MAAMjB,WACbuD,EAAOvD,SAAW,wBAEQ,KAAxB0B,KAAKT,MAAMhB,WACbsD,EAAOtD,SAAW,wBAGhByB,KAAKT,MAAMhB,SAAS+D,OAAS,IAC/BT,EAAOtD,SAAW,8BAObsD,GAzD6B,KA4DtCU,QAAUP,IACRA,EAAMQ,iBACN,IAAIX,EAAS7B,KAAKqC,iBACdI,OAAOC,KAAKb,GAAQS,OAAS,EAC/BtC,KAAKO,SAASC,IAAS,CACrBqB,OAAO,2BACFrB,EAAUqB,QACVA,MAIP7B,KAAK2C,qBAvE6B,KA4EtCA,kBAAoB,KAAO,MAAD,EACO3C,KAAKT,MAA5BjB,EADgB,EAChBA,SAAUC,EADM,EACNA,SAClByB,KAAKO,SAAS,CAACuB,YAAY,IAE3B9B,KAAKC,MAAMR,YAAYpB,MAAM,CAACC,WAAUC,aACrCpF,KAAK,KACA6G,KAAKC,MAAM9C,KAAK0E,OAClB7B,KAAKO,SAAS,CACZuB,YAAY,EACZD,OAAQ,CACNM,KAAMnC,KAAKC,MAAM9C,KAAK0E,OAAOM,SAIjCnC,KAAKO,SAAS,CAACuB,YAAY,IAC3B9B,KAAKC,MAAMR,YAAYL,uBAK/BW,SAAU,MAAD,EAC0DC,KAAKT,MAA/DjB,EADA,EACAA,SAAUC,EADV,EACUA,SAA0BsD,GADpC,EACoBD,eADpB,EACoCC,QAAQC,EAD5C,EAC4CA,WACnD,OACE,6BACE,qDACA,yBAAKb,UAAU,cACb,2BAAO2B,QAAQ,YAAf,YACA,2BACE7H,GAAG,WACHP,KAAK,OACLyG,UAAWY,EAAOvD,SAAW,uBAAyB,eACtDuE,YAAY,WACZZ,KAAK,WACL1F,MAAO+B,EACPwE,SAAU9C,KAAK+B,cACfgB,OAAQ/C,KAAKoC,aAEdP,EAAOvD,UAAY,yBAAK2C,UAAU,oBAAoBY,EAAOvD,WAEhE,yBAAK2C,UAAU,cACb,2BAAO2B,QAAQ,YAAf,YACA,2BACE7H,GAAG,WACHP,KAAK,WACLyG,UAAWY,EAAOtD,SAAW,uBAAyB,eACtDsE,YAAY,WACZZ,KAAK,WACL1F,MAAOgC,EACPuE,SAAU9C,KAAK+B,cACfgB,OAAQ/C,KAAKoC,aAEdP,EAAOtD,UAAY,yBAAK0C,UAAU,oBAAoBY,EAAOtD,WAgBhE,4BACE0C,UAAU,yCACVzG,KAAK,SACLwI,SAAUlB,EACVd,QAAShB,KAAKuC,SAJhB,UAQCV,EAAOM,MAAQ,yBAAKlB,UAAU,gCAAgCY,EAAOM,QAM/DxC,SAASgC,IC9IThC,UAZf,SAAeM,GAAQ,MACb9C,EAAsB8C,EAAtB9C,KAAMsC,EAAgBQ,EAAhBR,YAEd,OACE,kBAACwD,GAAA,EAAD,CAAOtC,OAAQxD,EAAK+F,eAAgB5C,OAAQb,EAAYL,kBACtD,kBAAC+D,GAAA,EAAD,KACE,kBAAC,GAAD,W,wCC0BOxD,SAASQ,IAjCxB,SAAqBF,GAAQ,MACnBmD,EAAiBnD,EAAjBmD,aACAxI,EAASqF,EAAM9C,KAAfvC,KAFkB,EAGmBqF,EAAMtE,MAA3C0B,EAHkB,EAGlBA,gBAAiBS,EAHC,EAGDA,gBAHC,EAIkBmC,EAAMC,aAA1CtC,EAJkB,EAIlBA,aAAcX,EAJI,EAIJA,kBAEhBoG,EAAY,CAAC1H,EAAO2H,MACpBA,EAAMC,IAAI5F,GAAKA,EAAE5C,IAAIyI,KAAKxH,GAAMA,IAAOL,EAAMZ,IAMnD,IAAI0I,EAAcJ,EAAUD,EAAc/F,GACtCqG,EAAcL,EAAUD,EAActF,GAE1C,OAAOlD,EACJ,6BACE6I,GACC,kBAACE,GAAA,EAAD,CAAUC,MAAM,YAAY3C,UAAU,OAAOD,QAAS,IAAM/D,EAAkBmG,GAAc,MAE5FK,GACA,kBAACI,GAAA,EAAD,CAAgBD,MAAM,YAAY3C,UAAU,OAAOD,QAAS,IAAM/D,EAAkBmG,GAAc,KAEnGM,GACC,kBAACI,GAAA,EAAD,CAAU7C,UAAU,OAAOD,QAAS,IAAMpD,EAAawF,GAAc,MAErEM,GACA,kBAACK,GAAA,EAAD,CAAgB9C,UAAU,OAAOD,QAAS,IAAMpD,EAAawF,GAAc,MAEpE,yC,oBCkBAY,OA/Cf,SAAmB/D,GAAQ,MACjBtE,EAAUsE,EAAVtE,MACAsI,EAAqDtI,EAArDsI,MAAOC,EAA8CvI,EAA9CuI,cAAeC,EAA+BxI,EAA/BwI,SAAUC,EAAqBzI,EAArByI,aAAcrJ,EAAOY,EAAPZ,GAStD,OACE,yBAAKkG,UAAU,QACb,yBAAKA,UAAU,eAAeE,KATb5E,EAS+B2H,EAR9C3H,EACI,kCAAN,OAAyCA,GAEpC8H,MAK2DnD,IAAK+C,IACrE,yBAAKhD,UAAU,aACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMS,GAAE,iBAAY3G,EAAZ,YAA0BkJ,GAClC,0BAAMhD,UAAU,uBAAuBmD,IAEzC,kBAAC,GAAD,CAAahB,aAAczH,IAC3B,4BAAQnB,KAAK,SACXyG,UAAU,sCACVH,cAAY,QACZwD,cAAA,qBAA2BvJ,IAH7B,UAQF,yBAAKA,GAAE,oBAAeA,GAAMkG,UAAU,aAAasD,SAAS,KAAKC,KAAK,SAASC,kBAAA,sBAAgC1J,GAAM2J,cAAY,QAC/H,yBAAKzD,UAAU,eAAeuD,KAAK,YACjC,yBAAKvD,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAclG,GAAE,sBAAiBA,IAAOkJ,GACtD,4BAAQzJ,KAAK,SAASyG,UAAU,QAAQ0D,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKzD,UAAU,cACb,2BAAIkD,QAlCK5H,OCWR4D,WAjBf,SAAwBF,GAAQ,MACtB/E,EAAW+E,EAAX/E,OACR,OACE,yBAAK+F,UAAU,OAEX/F,EAAOqI,IAAI5H,GAEP,yBAAKkJ,IAAKlJ,EAAMZ,GAAIkG,UAAU,iCAC5B,kBAAC,GAAD,CAAWtF,MAAOA,UCWjBwE,WAnBf,SAAiCF,GAAQ,MAC/BnC,EAAoBmC,EAAMtE,MAA1BmC,gBACR,OACE,6BACE,0CAAgBA,EAAgBwE,OAAhC,WACA,wBAAIrB,UAAU,cACVnD,EAAgByF,IAAI,CAAC5H,EAAOmJ,IAExB,wBAAID,IAAKC,EAAO7D,UAAU,mBACxB,kBAAC,IAAD,CAAMS,GAAE,iBAAY/F,EAAMZ,GAAlB,YAAgCY,EAAMsI,cCqC/C9D,WA/Cf,SAAmBF,GACjB,MAcQrE,EAAWqE,EAAMtE,MAAjBC,OAfgB,EAgBWqE,EAAMC,aAAjC5D,EAhBgB,EAgBhBA,UAAWd,EAhBK,EAgBLA,YAWnB,OACE,wBAAIyF,UAAU,0BA3BC,CACf,CACEgD,MAAO,kBACPrI,OAAQ,mBAEV,CACEqI,MAAO,eACPrI,OAAQ,gBAEV,CACEqI,MAAO,oBACPrI,OAAQ,sBAkBG2H,IAAIwB,IACX,OACE,wBAAIF,IAAKE,EAAKnJ,OAAQqF,UAAU,YAC9B,yBACEA,WAXO1E,EAWiBwI,EAAKnJ,OAVnC,YAAN,OAAmBA,IAAWW,EAAQ,SAAW,KAWrCyE,QAAS,IAjBAzE,KACrBD,EAAUC,GACVf,KAe2BwJ,CAAeD,EAAKnJ,SAElCmJ,EAAKd,QAdC1H,YCxBR,SAAS0I,GAAWhF,GAAQ,MACjCiF,EAA+CjF,EAA/CiF,MAAOC,EAAwClF,EAAxCkF,OAAQnC,EAAgC/C,EAAhC+C,SAAUoC,EAAsBnF,EAAtBmF,YAAaC,EAASpF,EAAToF,KAS9C,OACE,wBAAIpE,UAPE,oBAAN,OACIkE,EAAS,SAAW,GADxB,mBAEInC,EAAW,WAAa,GAF5B,aAQE,4BAAQ/B,UAAU,YAAYD,QAAS,IAAMoE,EAAYC,IACtDH,ICsCM/E,WAjDf,SAAoBF,GAAQ,IAAD,EACQA,EAAMtE,MAAjC2J,EADmB,EACnBA,WAAYlJ,EADO,EACPA,WADO,EAEY6D,EAAMC,aAArCzD,EAFmB,EAEnBA,cAAejB,EAFI,EAEJA,YACjB+J,EAAQ,GACRC,EAAUC,KAAKC,IAAIJ,EAAa,EAAG,GACnCK,EAAUF,KAAKG,IAAIN,EAAa,EAAGlJ,GAEvC,MAAMgJ,EAAe3J,IACnBgB,EAAchB,GACdD,EAAYC,IAGd,IAAK,IAAIA,EAAO+J,EAAS/J,GAAQkK,EAASlK,IACxC8J,EAAM1I,KACJ,kBAACoI,GAAD,CACEE,OAAQ1J,IAAS6J,EACjBT,IAAKpJ,EACLyJ,MAAOzJ,EACP2J,YAAaA,EACbC,KAAM5J,KAKZ,OACE,yBAAKmJ,aAAW,mBACd,wBAAI3D,UAAU,cACZ,kBAACgE,GAAD,CAAgBC,MAAM,SAAIE,YAAaA,EAAaC,KAAM,EAAGrC,SAAyB,IAAfsC,IACvE,kBAACL,GAAD,CAAgBC,MAAM,IAAIE,YAAaA,EAAaC,KAAMC,EAAa,EAAGtC,SAAyB,IAAfsC,IACnFA,EAAa,EAAI,GAChB,oCACE,kBAACL,GAAD,CAAgBC,MAAO,EAAGE,YAAaA,EAAaC,KAAM,IAC1D,kBAACJ,GAAD,CAAgBC,MAAM,MAAMlC,UAAU,KAGzCuC,EACAD,EAAa,EAAIlJ,GAChB,oCACE,kBAAC6I,GAAD,CAAgBC,MAAM,MAAMlC,UAAU,IACtC,kBAACiC,GAAD,CAAgBC,MAAO9I,EAAYgJ,YAAaA,EAAaC,KAAMjJ,KAGvE,kBAAC6I,GAAD,CAAgBC,MAAM,IAAIE,YAAaA,EAAaC,KAAMC,EAAa,EAAGtC,SAAUsC,IAAelJ,IACnG,kBAAC6I,GAAD,CAAgBC,MAAM,SAAIE,YAAaA,EAAaC,KAAMjJ,EAAY4G,SAAUsC,IAAelJ,SCXxF+D,WAjCf,SAAsBF,GAAQ,MACpBpE,EAAgBoE,EAAMtE,MAAtBE,YADmB,EAEaoE,EAAMC,aAAtC1D,EAFmB,EAEnBA,eAAgBhB,EAFG,EAEHA,YAoBxB,OACE,4BAAQyF,UAAU,wCAAwC6B,SANvCd,IACnBxF,EAAeM,SAASkF,EAAME,OAAO3F,QACrCf,KAIkFe,MAAOV,GApB1E,CACf,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAWa0H,IAAIsC,GACX,4BAAQhB,IAAKgB,EAAMtJ,MAAOsJ,GAAQA,QCU7B1F,WApCf,SAAuBF,GAAQ,MAAD,EACOA,EAAMtE,MAAjCJ,EADoB,EACpBA,OAAQO,EADY,EACZA,eADY,EAEemE,EAAMC,aAAzCxD,EAFoB,EAEpBA,kBAAmBlB,EAFC,EAEDA,YAErBsK,EAAmB9D,IAAU,MAAD,EACPA,EAAME,OAAxBvF,EADyB,EACzBA,QAASJ,EADgB,EAChBA,MAChBG,EAAkB,CAACC,UAASJ,UAC5Bf,KAGF,OACE,6BACE,6CAEED,EAAOgI,IAAIwC,GACT,yBAAK9E,UAAU,aAAa4D,IAAKkB,EAAMhL,IACrC,yBAAKkG,UAAU,cACb,2BAAOA,UAAU,mBACfzG,KAAK,WACLyH,KAAK,SACL1F,MAAOwJ,EAAMhL,GACbA,GAAIgL,EAAMhL,GACV+H,SAAUgD,EACVnJ,QAASb,EAAekK,SAASD,EAAMhL,MAEvC,2BAAOkG,UAAU,mBAAmB2B,QAASmD,EAAMhL,IAChDgL,EAAM9D,aC2BV9B,WA9Cf,SAAoBF,GAAQ,MAClB/E,EAAW+E,EAAMtE,MAAjBT,OADiB,EAEgD+E,EAAMC,aAAvEjC,EAFiB,EAEjBA,kBAAmB3C,EAFF,EAEEA,YAAaE,EAFf,EAEeA,YAAawB,EAF5B,EAE4BA,gBAarD,OAXAiJ,oBAAU,KACRhI,IACA3C,IACAE,KACC,IAQD,yBAAKyF,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,QAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAgB/F,OAAQA,MAG5B,yBAAK+F,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,SAIN,yBAAKA,UAAU,SACb,kBAAC,GAAD,MACA,4BAAQA,UAAU,iCAAiCD,QA3BhC,KACzBhE,IACAxB,MAyBM,qBACA,kBAAC,GAAD,MACA,kBAAC0K,GAAD,Y,8GCFK/F,WAxCf,SAAqBF,GAAQ,MAAD,EAC8BA,EAAMtE,MAAtDyH,EADkB,EAClBA,aAAc+C,EADI,EACJA,mBAAoBC,EADhB,EACgBA,UAa1C,OAXAH,oBAAU,KACRhG,EAAMC,aAAa/B,qBAAqBiF,EAAarI,KACpD,IASCqL,EACK,kBAACC,GAAA,EAAD,CAASC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAUhM,KAAK,SAG/B,IAA9B2L,EAAmB7D,OACd,8BAIP,kBAACmE,GAAA,EAAD,CAAWxF,UAAU,QAClBkF,EAAmB5C,IAAI,CAACmD,EAAOC,KAC9B,gCAAK9B,IAAK8B,GACR,kBAACC,GAAA,EAAD,CAAMC,SAAO,EAACP,MAAO,CAAEQ,SAAU,UAC/B,kBAACC,GAAA,EAAD,CAAS5F,KApBE5E,EAoBgBmK,EAAMM,aAnBrCzK,EACI,kCAAN,OAAyCA,GAEpC8H,MAgBiDnD,IAAKwF,EAAMzE,OAC3D,kBAACgF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOvD,MAAM,OAAO3C,UAAU,aAA9B,UAA8CyF,EAAMU,UAApD,cAAmEV,EAAMzE,WAvBlE1F,Y,UCgCR4D,WAzCf,SAAqBF,GAAQ,MACnBmD,EAAiBnD,EAAMtE,MAAvByH,aAER,OAAQ,kBAACiE,GAAA,EAAD,KACN,+BACE,4BACE,uCACA,4BAAKjE,EAAakE,UAEpB,4BACE,sCACA,4BAAI,kBAACH,GAAA,EAAD,CAAOvD,MAAM,WAAb,UAA2BR,EAAagB,aAAxC,aAAyDhB,EAAamE,WAAtE,QAEN,4BACE,sCACA,4BACEnE,EAAa7H,OAAOgI,IAAIwC,GAAU,kBAACoB,GAAA,EAAD,CAAOtC,IAAKkB,EAAMhL,GAAI6I,MAAM,UAAU4D,MAAI,GAAEzB,EAAM9D,SAGxF,4BACE,uCACA,4BAAKmB,EAAaqE,QAAlB,SAEF,4BACE,sCACA,4BAAKrE,EAAa/J,SAEpB,4BACE,4CACA,4BAAK+J,EAAasE,eAEpB,4BACE,uCACA,4BACEtE,EAAauE,qBAAqBpE,IAAI,CAACqE,EAASjB,IAAO,0BAAM9B,IAAK8B,GAAIiB,EAAQ3F,KAAvB,aCPlD9B,WA3Bf,SAAoBF,GAAQ,MAAD,EAC+BA,EAAMtE,MAAtDyH,EADiB,EACjBA,aAAcyE,EADG,EACHA,mBAAoBzB,EADjB,EACiBA,UAM1C,OAJAH,oBAAU,KACRhG,EAAMC,aAAahC,qBAAqBkF,EAAarI,KACpD,IAECqL,EACK,kBAACC,GAAA,EAAD,CAASC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAUhM,KAAK,SAG/B,IAA9BqN,EAAmBvF,OACd,8BAIP,yBAAKrB,UAAU,OACX4G,EAAmBtE,IAAIuE,GACvB,yBAAKjD,IAAKiD,EAAM/M,GAAIkG,UAAU,cAC5B,uBAAGiB,OAAO,SAAS6F,KAAI,yCAAoCD,EAAMjD,KAAOmD,IAAI,uBAC1E,yBAAK/G,UAAU,YAAYE,IAAG,qCAAgC2G,EAAMjD,IAAtC,gBAAyD3D,IAAK4G,EAAM7F,cCwD/F9B,WArEf,SAAmBF,GAEjBgG,oBAAU,KACR,MAAMgC,EAAUhI,EAAMiI,MAAMtO,OAAOmB,GACnCkF,EAAMC,aAAalC,eAAeiK,IACjC,IALqB,MAOhB7E,EAAiBnD,EAAMtE,MAAvByH,aACR,GAAqB,OAAjBA,EACF,OAAO,8BATe,MAWhBa,EAAiCb,EAAjCa,MAAOE,EAA0Bf,EAA1Be,SAAUgE,EAAgB/E,EAAhB+E,YASzB,OACE,yBAAKlH,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eAAeE,KAfvB5E,EAeyC4L,EAdxD5L,EACI,kCAAN,OAAyCA,GAEpC8H,MAWmEnD,IAAK+C,KAErE,yBAAKhD,UAAU,YACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,oCAAoCgD,GAClD,uBAAGhD,UAAU,aAAakD,GAC1B,kBAAC,GAAD,CAAaf,aAAcA,QAKnC,6BACE,kBAACgF,GAAA,EAAD,CAAKC,MAAI,EAACpH,UAAU,QAClB,kBAACqH,GAAA,EAAD,KACE,kBAAC,IAAD,CAASrH,UAAU,WAAWS,GAAE,iBAAY0B,EAAarI,GAAzB,YAAhC,YAIF,kBAACuN,GAAA,EAAD,KACE,kBAAC,IAAD,CAASrH,UAAU,WAAWS,GAAE,iBAAY0B,EAAarI,GAAzB,YAAhC,UAIF,kBAACuN,GAAA,EAAD,KACE,kBAAC,IAAD,CAASrH,UAAU,WAAWS,GAAE,iBAAY0B,EAAarI,GAAzB,YAAhC,aAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwN,KAAK,qBAAoB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAK,qBAAoB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAK,qBAAoB,kBAAC,GAAD,YA/CvBhM,SCRR4D,WAbf,SAAsBF,GAAQ,MACpB5C,EAAoB4C,EAAMtE,MAA1B0B,gBACR,OACE,yBAAK4D,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAgB/F,OAAQmC,UCOnB8C,WAbf,SAAuBF,GAAQ,MACrBnC,EAAoBmC,EAAMtE,MAA1BmC,gBACR,OACE,yBAAKmD,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAgB/F,OAAQ4C,UCElC,MAAM0K,WAAY1I,IAAMF,UAEtB6I,oBAAqB,MAAD,EACYzI,KAAKC,MAA3B9C,EADU,EACVA,KAAMsC,EADI,EACJA,YAEVtC,EAAKC,UACPqC,EAAYZ,UAAU1B,EAAKC,WAE3BqC,EAAYL,mBAIhBW,SAAU,MACA5C,EAAS6C,KAAKC,MAAd9C,KACAC,EAAqCD,EAArCC,UAAWsL,EAA0BvL,EAA1BuL,OAAQxF,EAAkB/F,EAAlB+F,eAE3B,OAAOwF,IAAWtL,EAChB,kBAAC,IAAD,CAAYuL,SAAS,KACnB,kBAAC,GAAD,MACEzF,GAAkB,kBAAC,GAAD,MACpB,kBAAC,IAAD,CAAO0F,OAAK,EAACL,KAAK,KAAlB,IAAuB,kBAAC,GAAD,OACvB,kBAAC,IAAD,CAAOA,KAAK,aAAZ,IAAyB,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAK,cAAZ,IAA0B,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAK,aAAaxI,OAASE,GAAU,kBAAC,GAAcA,MAI7D,0CAKSN,SAAS6I,I,sCC1CjB,MAAMK,GAAU,I,MAAIC,GCCrBC,GAAe,CACnBnO,KAAM,KACNwC,UAAWyL,GAAQ/N,IAAI,cACvB4N,QAAQ,EACRxF,gBAAgB,EAChBrB,OAAQ,MA+CKmH,OA5CK,CAACzJ,EAAQwJ,GAAcE,KAAY,MAC9CzO,EAAiByO,EAAjBzO,KAAMW,EAAW8N,EAAX9N,QACb,OAAQX,GACN,IzBX8B,qByBY5B,OAAO,2BACF+E,GADL,IAEE3E,KAAMO,EAAQP,KACdwC,UAAWjC,EAAQN,WACnB6N,QAAQ,IAGZ,IzBfkC,yByBgBhC,OAAO,2BACFnJ,GADL,IAEE3E,KAAM,KACNwC,UAAW,KACXsL,QAAQ,IAGZ,IzB7B8B,qByB8B5B,OAAO,2BACFnJ,GADL,IAEE2D,gBAAiB3D,EAAM2D,iBAG3B,IzB3B+B,sByB4B7B,OAAO,2BACF3D,GADL,IAEEsC,OAAQ,CACNM,KAAMhH,EAAQ+N,kBAIpB,IzBjC8B,qByBkC5B,OAAO,2BACF3J,GADL,IAEEsC,OAAQ,OAGZ,QACE,OAAOtC,ICjDb,MAAMwJ,GAAe,CACnBlH,OAAQ,KACRuE,WAAW,EACX/I,gBAAiB,GACjBS,gBAAiB,GACjB5C,OAAQ,GACRK,OAAQ,GACRO,eAAgB,GAChBF,OAAQ,kBACRC,aAAa,IAAIsN,MAAOC,cACxB9D,WAAY,EACZlJ,WAAY,EACZgH,aAAc,KACdyE,mBAAoB,GACpB1B,mBAAoB,IAiIPkD,OA9HM,CAAC9J,EAAQwJ,GAAcE,KAAY,MAC/CzO,EAAiByO,EAAjBzO,KAAMW,EAAW8N,EAAX9N,QACb,OAAQX,GACN,I7BtByB,gB6BuBvB,OAAO,2BACF+E,GADL,IAEE6G,WAAW,IAGf,I7B3BwB,e6B4BtB,OAAO,2BACF7G,GADL,IAEE6G,WAAW,IAGf,I7BhCkC,yB6BiChC,OAAO,2BACF7G,GADL,IAEElC,gBAAiBlC,IAGrB,I7BrCoC,2B6BsClC,OAAO,2BACFoE,GADL,IAEEzB,gBAAiB3C,IAGrB,I7BzCgC,uB6B0C9B,OAAO,2BACFoE,GADL,IAEEhE,OAAQJ,IAGZ,I7B9C8B,qB6B+C5B,OAAO,2BACFoE,GADL,IAEEsC,OAAQ1G,IAGZ,I7BlDgC,uB6BmD9B,OAAO,2BACFoE,GADL,IAEErE,OAAQC,EAAQD,OAChBkB,WAAYjB,EAAQiB,aAGxB,I7BvDuB,c6BwDrB,OAAO,2BACFmD,GADL,IAEE3D,OAAQT,EACRmK,WAAY,IAGhB,I7B7D4B,mB6B8D1B,OAAO,2BACF/F,GADL,IAEE1D,YAAaV,EACbmK,WAAY,IAGhB,I7BlE+B,sB6BmE7B,OAAO,2BACF/F,GADL,IAEEzD,eAAgBX,EAChBmK,WAAY,IAGhB,I7B1E2B,kB6B2EzB,OAAO,2BACF/F,GADL,IAEE+F,WAAYnK,IAGhB,I7B9E6B,oB6B+E3B,OAAO,2BACFoE,GADL,IAEEzD,eAAgB,GAChBF,OAAQ,kBACR0J,WAAY,EACZzJ,YAAa,OAGjB,I7BrFqC,4B6BsFnC,OAAO,2BACF0D,GADL,IAEE6D,aAAcjI,IAGlB,I7BzF+B,sB6B0F7B,OAAO,2BACFoE,GADL,IAEE6D,aAAc,KACdyE,mBAAoB,GACpB1B,mBAAoB,KAGxB,I7BlGmC,0B6BmGjC,OAAO,2BACF5G,GADL,IAEEsC,OAAQ1G,IAGZ,I7BrG4C,mC6BsG1C,OAAO,2BACFoE,GADL,IAEEsI,mBAAoB1M,IAGxB,I7BxG4C,mC6ByG1C,OAAO,2BACFoE,GADL,IAEE4G,mBAAoBhL,IAGxB,I7B5G+B,sB6B6G7B,OAAO,2BACFoE,GADL,IAEElC,gBAAiB,GACjBS,gBAAiB,KAGrB,QACE,OAAOyB,ICzIE+J,6BAAgB,CAC7BnM,KAAM6L,GACNrN,MAAO0N,KCuBME,OANDC,sBACZC,GACAC,+BACEC,0BAAgBC,KAlBE,EAAGrP,WAAUmB,cAAemO,GAAQZ,I5BLxB,uB4BM5BA,EAAOzO,MACTqO,GAAQiB,IAAI,aAAcb,EAAO9N,QAAQN,WAAY,CACnD0N,KAAM,IACNwB,OAAQ,S5BLwB,2B4BShCd,EAAOzO,MACTqO,GAAQmB,OAAO,cAGVH,EAAKZ,OCVdgB,IAASlK,OACP,kBAAC,IAAD,CAAUwJ,MAAOA,IACf,kBAAC,GAAD,OAEFW,SAASC,eAAe,W","file":"static/js/main.5b5cf964.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_poster.a9af4f3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no_poster_album.8d55f821.jpg\";","import queryString from 'query-string';\n\nconst API_URL = process.env.REACT_APP_API_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then(response => {\n        if (response.status < 400) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(data => {\n        resolve(data);\n      })\n      .catch(res => {\n        // reject(response);\n        res.json().then(error => {\n          reject(error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, options = {}) {\n    const {params = {}} = options;\n\n    const queryStringParams = {\n      api_key: API_KEY,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    });\n  }\n\n  static post(url, options = {}) {\n    const {params = {}, body = {}} = options;\n\n    const queryStringParams = {\n      api_key: API_KEY,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    });\n  }\n\n  static delete(url, options = {}) {\n    const {params = {}, body = {}} = options;\n\n    const queryStringParams = {\n      api_key: API_KEY,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    });\n  }\n}","export const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\nexport const UPDATE_MOVIES_FAVORITE = 'UPDATE_MOVIES_FAVORITE';\nexport const UPDATE_MOVIES_WILL_WATCH = 'UPDATE_MOVIES_WILL_WATCH';\nexport const FETCH_GENRES = 'FETCH_GENRES';\nexport const FETCH_GENRES_SUCCESS = 'FETCH_GENRES_SUCCESS';\nexport const FETCH_GENRES_ERROR = 'FETCH_GENRES_ERROR';\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\nexport const SET_SORT_BY = 'SET_SORT_BY';\nexport const SET_CURRENT_YEAR = 'SET_CURRENT_YEAR';\nexport const SET_ACTIVE_PAGE = 'SET_ACTIVE_PAGE';\nexport const SET_SELECTED_GENRES = 'SET_SELECTED_GENRES';\nexport const CLEAR_ALL_FILTERS = 'CLEAR_ALL_FILTERS';\nexport const FETCH_MOVIE_BY_ID = 'FETCH_MOVIE_BY_ID';\nexport const FETCH_MOVIE_BY_ID_SUCCESS = 'FETCH_MOVIE_BY_ID_SUCCESS';\nexport const FETCH_MOVIE_BY_ID_ERROR = 'FETCH_MOVIE_BY_ID_ERROR';\nexport const CLEAR_CURRENT_MOVIE = 'CLEAR_CURRENT_MOVIE';\nexport const FETCH_MOVIE_VIDEOS_BY_ID = 'FETCH_MOVIE_VIDEOS_BY_ID';\nexport const FETCH_MOVIE_VIDEOS_BY_ID_SUCCESS = 'FETCH_MOVIE_VIDEOS_BY_ID_SUCCESS';\nexport const FETCH_MOVIE_VIDEOS_BY_ID_ERROR = 'FETCH_MOVIE_VIDEOS_BY_ID_ERROR';\nexport const FETCH_MOVIE_ACTORS_BY_ID = 'FETCH_MOVIE_ACTORS_BY_ID';\nexport const FETCH_MOVIE_ACTORS_BY_ID_SUCCESS = 'FETCH_MOVIE_ACTORS_BY_ID_SUCCESS';\nexport const FETCH_MOVIE_ACTORS_BY_ID_ERROR = 'FETCH_MOVIE_ACTORS_BY_ID_ERROR';\nexport const CLEAR_ALL_USER_DATA = 'CLEAR_ALL_USER_DATA';","import * as types from './movieTypes';\nimport CallApi from \"../../api/api\";\n\nexport const startLoading = () => dispatch => {\n  dispatch({type: types.START_LOADING});\n}\n\nexport const stopLoading = () => dispatch => {\n  dispatch({type: types.STOP_LOADING});\n}\n\nexport const clearAllUserData = () => dispatch => {\n  dispatch({type: types.CLEAR_ALL_USER_DATA});\n}\n\nexport const fetchMoviesFavorite = ({ user, session_id }) => dispatch => {\n  CallApi.get(`/account/${user.id}/favorite/movies`, {\n    params: {\n      session_id,\n    }\n  }).then(data => {\n    dispatch(updateMoviesFavorite(data.results));\n  });\n};\n\nexport const updateMoviesFavorite = movies => {\n  return {\n    type: types.UPDATE_MOVIES_FAVORITE,\n    payload: movies,\n  };\n};\n\nexport const fetchMoviesWillWatch = ({ user, session_id }) => dispatch => {\n  CallApi.get(`/account/${user.id}/watchlist/movies`, {\n    params: {\n      session_id,\n    }\n  }).then(data => {\n    dispatch(updateMoviesWillWatch(data.results));\n  });\n};\n\nexport const updateMoviesWillWatch = movies => {\n  return {\n    type: types.UPDATE_MOVIES_WILL_WATCH,\n    payload: movies,\n  };\n};\n\nexport const fetchGenres = () => dispatch => {\n  dispatch({\n    type: types.FETCH_GENRES,\n  });\n\n  CallApi.get('/genre/movie/list')\n    .then(data => \n      dispatch({\n        type: types.FETCH_GENRES_SUCCESS,\n        payload: data.genres,\n      })\n    ).catch(error =>\n      dispatch({\n        type: types.FETCH_GENRES_ERROR,\n        payload: error,\n      })\n    );\n}\n\nexport const fetchMovies = (page = 1) => (dispatch, getState) => {\n  dispatch({\n    type: types.FETCH_MOVIES,\n  });\n\n  const { sortBy, currentYear, genresSelected } = getState().movie;\n  let genres = '';\n  genresSelected.forEach(el => genres += el + ',');\n\n  const queryStringParams = {\n    sort_by: sortBy,\n    page: page,\n    primary_release_year: currentYear,\n    with_genres: genres\n  };\n\n  CallApi.get('/discover/movie', { params: queryStringParams })\n    .then(data => \n      dispatch({\n        type: types.FETCH_MOVIES_SUCCESS,\n        payload: {\n          movies: data.results,\n          totalPages: data.total_pages\n        }\n      })\n    ).catch(error =>\n      dispatch({\n        type: types.FETCH_MOVIES_ERROR,\n        payload: error,\n      })\n    );\n}\n\nexport const setSortBy = value => dispatch => {\n  dispatch({\n    type: types.SET_SORT_BY,\n    payload: value,\n  });\n}\n\nexport const setCurrentYear = value => dispatch => {\n  dispatch({\n    type: types.SET_CURRENT_YEAR,\n    payload: value,\n  });\n}\n\nexport const setActivePage = value => dispatch => {\n  dispatch({\n    type: types.SET_ACTIVE_PAGE,\n    payload: value,\n  });\n}\n\nexport const setSelectedGenres = ({checked, value}) => (dispatch, getState) => {\n  let newGenres = [...getState().movie.genresSelected];\n  if (checked) {\n    newGenres.push(parseInt(value));\n  } else {\n    newGenres = getState().movie.genresSelected.filter(el => el !== parseInt(value));\n  }\n\n  dispatch({\n    type: types.SET_SELECTED_GENRES,\n    payload: newGenres,\n  });\n}\n\nexport const clearAllFilters = value => dispatch => {\n  dispatch({\n    type: types.CLEAR_ALL_FILTERS,\n  });\n}\n\nexport const setFavouriteMovie = (movie, favorite) => (dispatch, getState) => {\n  const { user, sessionId } = getState().auth;\n  const { moviesFavourite } = getState().movie;\n  CallApi.post(`/account/${user.id}/favorite`, {\n    params: {\n      session_id: sessionId\n    },\n    body: {\n      media_type: 'movie',\n      media_id: movie.id,\n      favorite: favorite,\n    },\n  }).then((res) => {\n    if (res.status_code === 1 || res.status_code === 13) {\n      let newMoviesFavourite;\n      if (!favorite) {\n        newMoviesFavourite = moviesFavourite.filter(m => m.id !== movie.id);\n      } else {\n        newMoviesFavourite = [...moviesFavourite];\n        newMoviesFavourite.push(movie);\n      }\n      dispatch(updateMoviesFavorite(newMoviesFavourite));\n    }\n  });\n}\n\nexport const setWatchList = (movie, watchlist) => (dispatch, getState) => {\n  const {user, sessionId} = getState().auth;\n  const { moviesWillWatch } = getState().movie;\n  CallApi.post(`/account/${user.id}/watchlist`, {\n    params: {\n      session_id: sessionId\n    },\n    body: {\n      media_type: 'movie',\n      media_id: movie.id,\n      watchlist: watchlist,\n    },\n  }).then((res) => {\n    if (res.status_code === 1 || res.status_code === 13) {\n      let newMoviesWillWatch;\n      if (!watchlist) {\n        newMoviesWillWatch = moviesWillWatch.filter(m => m.id !== movie.id);\n      } else {\n        newMoviesWillWatch = [...moviesWillWatch];\n        newMoviesWillWatch.push(movie);\n      }\n      dispatch(updateMoviesWillWatch(newMoviesWillWatch));\n    }\n  });\n}\n\nexport const fetchMovieById = id => dispatch => {\n  dispatch({\n    type: types.START_LOADING,\n  });\n  dispatch({\n    type: types.FETCH_MOVIE_BY_ID,\n  });\n\n  CallApi.get(`/movie/${id}`)\n    .then(data => {\n      dispatch({\n        type: types.FETCH_MOVIE_BY_ID_SUCCESS,\n        payload: data,\n      });\n      dispatch({\n        type: types.STOP_LOADING,\n      });\n    }).catch(error => {\n      dispatch({\n        type: types.FETCH_MOVIE_BY_ID_ERROR,\n        payload: error,\n      });\n      dispatch({\n        type: types.STOP_LOADING,\n      });\n    });\n}\n\nexport const clearCurrentMovie = () => dispatch => {\n  dispatch({\n    type: types.CLEAR_CURRENT_MOVIE,\n  });\n}\n\nexport const fetchMovieVideosById = id => dispatch => {\n  dispatch({\n    type: types.START_LOADING,\n  });\n\n  dispatch({\n    type: types.FETCH_MOVIE_VIDEOS_BY_ID,\n  });\n\n  CallApi.get(`/movie/${id}/videos`)\n    .then(data => {\n      dispatch({\n        type: types.FETCH_MOVIE_VIDEOS_BY_ID_SUCCESS,\n        payload: data.results,\n      });\n      dispatch({\n        type: types.STOP_LOADING,\n      });\n    }).catch(error => \n      dispatch({\n        type: types.FETCH_MOVIE_VIDEOS_BY_ID_ERROR,\n        payload: error,\n      })\n    );\n}\n\nexport const fetchMovieActorsById = id => dispatch => {\n  dispatch({\n    type: types.START_LOADING,\n  });\n\n  dispatch({\n    type: types.FETCH_MOVIE_ACTORS_BY_ID,\n  });\n\n  CallApi.get(`/movie/${id}/credits`)\n    .then(data => {\n      dispatch({\n        type: types.FETCH_MOVIE_ACTORS_BY_ID_SUCCESS,\n        payload: data.cast,\n      });\n      dispatch({\n        type: types.STOP_LOADING,\n      });\n    }).catch(error => \n      dispatch({\n        type: types.FETCH_MOVIE_ACTORS_BY_ID_ERROR,\n        payload: error,\n      })\n    );\n}","import * as types from './authTypes';\nimport CallApi from \"../../api/api\";\nimport { fetchMoviesFavorite, fetchMoviesWillWatch } from '../movie/movieActions';\n\nexport const login = ({username, password}) => async dispatch => {\n  try {\n    dispatch({\n      type: types.REQUEST_LOGIN,\n    });\n\n    const token = await CallApi.get('/authentication/token/new');\n    const tokenWithLogin = await CallApi.post('/authentication/token/validate_with_login', {\n      body: {\n        username: username,\n        password: password,\n        request_token: token.request_token,\n      }\n    });\n\n    const session = await CallApi.post('/authentication/session/new', {\n      body: {\n        request_token: tokenWithLogin.request_token,\n      }\n    });\n\n    dispatch(fetchAuth(session.session_id));\n  } catch (error) {\n    dispatch({\n      type: types.REQUEST_LOGIN_ERROR,\n      payload: error,\n    });\n    console.log('error', error);\n  }\n}\n\nexport const fetchAuth = session_id => dispatch => {\n  dispatch({\n    type: types.FETCH_REQUEST_AUTH,\n  });\n\n  CallApi.get('/account', {\n    params: {\n      session_id,\n    }\n  }).then(user => {\n    dispatch(updateAuth({ user, session_id }));\n    dispatch(fetchMoviesFavorite({ user, session_id }));\n    dispatch(fetchMoviesWillWatch({ user, session_id }));\n  }).catch(error => {\n    dispatch({\n      type: types.FETCH_AUTH_ERROR,\n      payload: error,\n    });\n  });\n};\n\nexport const updateAuth = ({ user, session_id }) => ({\n  type: types.FETCH_AUTH_SUCCESS,\n  payload: {\n    user,\n    session_id,\n  }\n});\n\nexport const userLogout = session_id => dispatch => {\n  dispatch({\n    type: types.REQUEST_LOGOUT,\n  });\n\n  CallApi.delete('/authentication/session', { body: { session_id }})\n    .then(() => dispatch(logout()))\n    .catch(error => {\n      dispatch({\n        type: types.REQUEST_LOGOUT_ERROR,\n        payload: error,\n      });\n    });\n}\n\nexport const logout = () => {\n  return {\n    type: types.REQUEST_LOGOUT_SUCCESS,\n  };\n};\n\nexport const toggleLoginModal = () => {\n  return {\n    type: types.TOGGLE_LOGIN_MODAL,\n  };\n};\n\nexport const clearLoginErrors = () => {\n  return {\n    type: types.CLEAR_LOGIN_ERRORS,\n  };\n}","export const UPDATE_AUTH = 'UPDATE_AUTH';\nexport const TOGGLE_LOGIN_MODAL = 'TOGGLE_LOGIN_MODAL';\nexport const FETCH_REQUEST_AUTH = 'FETCH_REQUEST_AUTH';\nexport const FETCH_AUTH_SUCCESS = 'FETCH_AUTH_SUCCESS';\nexport const FETCH_AUTH_ERROR = 'FETCH_AUTH_ERROR';\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT';\nexport const REQUEST_LOGOUT_ERROR = 'REQUEST_LOGOUT_ERROR';\nexport const REQUEST_LOGOUT_SUCCESS = 'REQUEST_LOGOUT_SUCCESS';\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\nexport const REQUEST_LOGIN_ERROR = 'REQUEST_LOGIN_ERROR';\nexport const REQUEST_LOGIN_SUCCESS = 'REQUEST_LOGIN_SUCCESS';\nexport const CLEAR_LOGIN_ERRORS = 'CLEAR_LOGIN_ERRORS';","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as authActions from '../redux/auth/authActions';\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authActions: bindActionCreators(authActions, dispatch),\n});\n\nexport const withAuth = Component =>\n  connect(mapStateToProps, mapDispatchToProps)(\n    class WithAuth extends React.Component {\n      render() {\n        return (<Component {...this.props} />);\n      };\n    });","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as movieActions from '../redux/movie/movieActions';\n\nconst mapStateToProps = state => {\n  return {\n    movie: state.movie,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  movieActions: bindActionCreators(movieActions, dispatch),\n});\n\nexport const withMovie = Component =>\n  connect(mapStateToProps, mapDispatchToProps)(\n    class WithMovie extends React.Component {\n      render() {\n        return (<Component {...this.props} />);\n      };\n    });","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuth } from '../../hoc/withAuth';\nimport { withMovie } from '../../hoc/withMovie';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass UserMenu extends React.Component {\n  state = {\n    dropdownOpen: false,\n  }\n\n  toggle = () => {\n    this.setState(\n      prevState => ({\n        dropdownOpen: !prevState.dropdownOpen,\n      })\n    );\n  }\n\n  handleLogOut = () => {\n    this.props.authActions.userLogout(this.props.auth.sessionId);\n    this.props.movieActions.clearAllUserData();\n  }\n\n  render() {\n    const {dropdownOpen} = this.state;\n    const {auth: { user }} = this.props;\n    return (\n      <Dropdown isOpen={dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle\n          tag=\"div\"\n          data-toggle=\"dropdown\"\n          aria-expanded={dropdownOpen}\n        >\n          <div onClick={this.toggle}>\n            <img\n              className=\"rounded mr-2\"\n              alt=\"avatar\"\n              src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=32\"`}\n              />\n            <span className=\"text-light\">{user.username}</span>\n          </div>\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem onClick={this.handleLogOut}>\n            Logout\n          </DropdownItem>\n          <DropdownItem onClick={this.toggle}>\n            <Link to={'/favorite'}>My favorite movies</Link>\n          </DropdownItem>\n          <DropdownItem onClick={this.toggle}>\n            <Link to={'/willwatch'}>My will watch list</Link>\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default withAuth(withMovie(UserMenu));","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withAuth } from '../../hoc/withAuth';\nimport UserMenu from './UserMenu';\n\nfunction Header(props) {\n  const { auth, authActions } = props;\n  return (\n    <nav className=\"navbar sticky-top navbar-dark bg-dark\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/\">Home</Link>\n        </li>\n      </ul>\n      { auth.user\n        ? <UserMenu />\n        : <button\n            className=\"btn btn-outline-primary my-2 my-sm-0\"\n            type=\"button\"\n            onClick={authActions.toggleLoginModal}\n          >\n            Log in\n          </button> }\n    </nav>\n  );\n}\n\nexport default withAuth(Header);","import React from 'react';\nimport { withAuth } from '../../../hoc/withAuth';\n\nclass LoginForm extends React.Component {\n\n  state = {\n    username: '',\n    password: '',\n    repeatPassword: '',\n    errors: {},\n    submitting: false,\n  }\n\n  onChangeInput = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n\t\tthis.setState(prevState => ({ \n      [name]: value,\n      errors: {\n        ...prevState.errors,\n        base: null,\n        [name]: null,\n      }\n    }));\n  }\n\n  handleBlur = (event) => {\n    const {name} = event.target;\n    const errors = this.validateFields();\n    const error = errors[name];\n\n    if (error) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          [name]: error,\n        }\n      }));\n    }\n    this.props.authActions.clearLoginErrors();\n  }\n  \n  validateFields = () => {\n    const errors = {};\n\n    if (this.state.username === '') {\n      errors.username = 'Username is required';\n    }\n    if (this.state.password === '') {\n      errors.password = 'Password is required';\n    }\n\n    if (this.state.password.length < 5) {\n      errors.password = 'Your password it too small';\n    }\n    // Unnecessary field\n    // if (this.state.repeatPassword !== this.state.password) {\n    //   errors.repeatPassword = 'Passwords should be equal';\n    // }\n\n    return errors;\n  }\n\n  onLogin = event => {\n    event.preventDefault();\n    let errors = this.validateFields();\n    if (Object.keys(errors).length > 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors\n        }\n      }));\n    } else {\n      this.sendPromisesAsync();\n    }\n  }\n\n  // Send requests in async style\n  sendPromisesAsync = () => {\n    const { username, password } = this.state;\n    this.setState({submitting: true});\n    \n    this.props.authActions.login({username, password})\n      .then(() => {\n        if (this.props.auth.errors) {\n          this.setState({\n            submitting: false,\n            errors: {\n              base: this.props.auth.errors.base\n            }\n          });\n        } else {\n          this.setState({submitting: false});\n          this.props.authActions.toggleLoginModal();\n        }\n    });\n  }\n\n  render() {\n    const {username, password, repeatPassword, errors, submitting} = this.state;\n    return (\n      <div>\n        <h1>Log into your account</h1>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            className={errors.username ? \"form-control invalid\" : \"form-control\"}\n            placeholder=\"username\"\n            name=\"username\"\n            value={username}\n            onChange={this.onChangeInput}\n            onBlur={this.handleBlur}\n          />\n          {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            className={errors.password ? \"form-control invalid\" : \"form-control\"}\n            placeholder=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.onChangeInput}\n            onBlur={this.handleBlur}\n          />\n          {errors.password && <div className=\"invalid-feedback\">{errors.password}</div> }\n        </div>\n        {/* <div className=\"form-group\">\n          <label htmlFor=\"repeatPassword\">Repeat Password</label>\n          <input\n            id=\"repeatPassword\"\n            type=\"password\"\n            className={errors.repeatPassword ? \"form-control invalid\" : \"form-control\"}\n            placeholder=\"repeatPassword\"\n            name=\"repeatPassword\"\n            value={repeatPassword}\n            onChange={this.onChangeInput}\n            onBlur={this.handleBlur}\n          />\n          {errors.repeatPassword && <div className=\"invalid-feedback\">{errors.repeatPassword}</div> }\n    </div> */}\n        <button\n          className=\"btn btn-block btn-primary my-2 my-sm-0\"\n          type=\"submit\"\n          disabled={submitting}\n          onClick={this.onLogin}\n        >\n          Log in\n        </button>\n        {errors.base && <div className=\"invalid-feedback text-center\">{errors.base}</div> }\n      </div>\n    );\n  }\n}\n\nexport default withAuth(LoginForm);","import React from 'react';\n\nimport { Modal, ModalBody } from 'reactstrap';\nimport LoginForm from './LoginForm';\nimport { withAuth } from '../../../hoc/withAuth';\n\nfunction Login(props) {\n  const { auth, authActions } = props;\n  \n  return (\n    <Modal isOpen={auth.showLoginModal} toggle={authActions.toggleLoginModal}>\n      <ModalBody>\n        <LoginForm />\n      </ModalBody>\n    </Modal>\n  );\n}\n\nexport default withAuth(Login);","import React from 'react';\nimport { withAuth } from '../../hoc/withAuth';\nimport { withMovie } from '../../hoc/withMovie';\nimport { Favorite, FavoriteBorder, Bookmark, BookmarkBorder } from '@material-ui/icons';\n\nfunction ActionIcons(props) {\n  const { currentMovie } = props;\n  const { user } = props.auth;\n  const { moviesFavourite, moviesWillWatch } = props.movie;\n  const { setWatchList, setFavouriteMovie } = props.movieActions;\n\n  const isInArray = (movie, array) => {\n    if (array.map(m => m.id).find(el => el === movie.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  let isFavourite = isInArray(currentMovie, moviesFavourite);\n  let inWatchList = isInArray(currentMovie, moviesWillWatch);\n\n  return user ? \n    (<div>\n      {isFavourite &&\n        <Favorite color=\"secondary\" className=\"icon\" onClick={() => setFavouriteMovie(currentMovie, false)} />\n      }\n      {!isFavourite &&\n        <FavoriteBorder color=\"secondary\" className=\"icon\" onClick={() => setFavouriteMovie(currentMovie, true)} />\n      }\n      {inWatchList &&\n        <Bookmark className=\"icon\" onClick={() => setWatchList(currentMovie, false)} />\n      }\n      {!inWatchList &&\n        <BookmarkBorder className=\"icon\" onClick={() => setWatchList(currentMovie, true)} />\n      }\n    </div>) : (<></>);\n};\n\nexport default withAuth(withMovie(ActionIcons));","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport ActionIcons from '../UIComponents/ActionIcons';\n\nimport noPoster from '../../img/no_poster_album.jpg';\n\nfunction MovieCard(props) {\n  const { movie } = props;\n  const { title, backdrop_path, overview, vote_average, id } = movie;\n\n  const getPosterSrc = value => {\n    if (value) {\n      return `https://image.tmdb.org/t/p/w500${value}`;\n    }\n    return noPoster;\n  }\n\n  return (\n    <div className=\"card\">\n      <img className=\"card-img-top\" src={getPosterSrc(backdrop_path)} alt={title} />\n      <div className=\"card-body\">\n        <div className=\"card-title\">\n          <Link to={`/movie/${id}/detail`}>{title}</Link>\n          <span className=\"badge badge-warning\">{vote_average}</span>\n        </div>\n        <ActionIcons currentMovie={movie} />\n        <button type=\"button\"\n          className=\"btn btn-block btn-outline-dark mt-2\"\n          data-toggle=\"modal\"\n          data-target={`#itemModal-${id}`}\n        >\n          About\n        </button>\n      </div>\n      <div id={`itemModal-${id}`} className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby={`#modalTitle-${id}`} aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id={`#modalTitle-${id}`}>{title}</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>{overview}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\nimport MovieCard from './MovieCard';\n\nfunction MovieContainer(props) {\n  const { movies } = props;\n  return (\n    <div className=\"row\">\n      {\n        movies.map(movie => {\n          return (\n            <div key={movie.id} className=\"col-12 mb-4 col-sm-6 col-lg-4\">\n              <MovieCard movie={movie} />\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default withMovie(MovieContainer);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withMovie } from '../../hoc/withMovie';\n\nfunction MovieWillWatchContainer(props) {\n  const { moviesWillWatch } = props.movie;\n  return (\n    <div>\n      <h4>Will watch {moviesWillWatch.length} movies</h4>\n      <ul className=\"list-group\">\n        { moviesWillWatch.map((movie, index) => {\n            return (\n              <li key={index} className=\"list-group-item\">\n                <Link to={`/movie/${movie.id}/detail`}>{movie.title}</Link>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default withMovie(MovieWillWatchContainer);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nfunction MovieTabs(props) {\n  const sortList = [\n    {\n      title: 'Popularity desc',\n      sortBy: 'popularity.desc',\n    },\n    {\n      title: 'Revenue desc',\n      sortBy: 'revenue.desc',\n    },\n    {\n      title: 'Release date desc',\n      sortBy: 'release_date.desc',\n    }\n  ];\n  const { sortBy } = props.movie;\n  const { setSortBy, fetchMovies } = props.movieActions;\n\n  const onChangeSortBy = value => {\n    setSortBy(value);\n    fetchMovies();\n  }\n\n  const getClassName = value => {\n    return `nav-link ${sortBy === value ? 'active' : ''}`;\n  }\n\n  return (\n    <ul className=\"nav nav-tabs nav-pills\">\n      {\n        sortList.map(list => {\n          return (\n            <li key={list.sortBy} className=\"nav-item\">\n              <div\n                className={getClassName(list.sortBy)}\n                onClick={() => onChangeSortBy(list.sortBy)}\n              >\n                {list.title}\n              </div>\n            </li>\n          )\n        })\n      }\n    </ul>\n  );\n};\n\nexport default withMovie(MovieTabs);","import React from \"react\";\n\nexport default function Pagination(props) {\n  const { label, active, disabled, onClickPage, item } = props;\n\n  const getClassName = () => {\n    return `page-item\n      ${active ? 'active' : ''}\n      ${disabled ? 'disabled' : ''}\n      `;\n  }\n\n  return (\n    <li className={getClassName()} >\n      <button className=\"page-link\" onClick={() => onClickPage(item)}>\n        {label}\n      </button>\n    </li>);\n}","import React from \"react\";\nimport PaginationItem from './PaginationItem';\nimport { withMovie } from \"../../hoc/withMovie\";\n\nfunction Pagination(props) {\n  let { activePage, totalPages } = props.movie;\n  let { setActivePage, fetchMovies } = props.movieActions;\n  let items = [];\n  let minPage = Math.max(activePage - 2, 1);\n  let maxPage = Math.min(activePage + 2, totalPages);\n\n  const onClickPage = (page) => {\n    setActivePage(page);\n    fetchMovies(page);\n  }\n\n  for (let page = minPage; page <= maxPage; page++) {\n    items.push(\n      <PaginationItem\n        active={page === activePage}\n        key={page}\n        label={page}\n        onClickPage={onClickPage}\n        item={page}\n      />\n    );\n  }\n\n  return (\n    <nav aria-label=\"Page navigation\">\n      <ul className=\"pagination\">\n        <PaginationItem label='≪' onClickPage={onClickPage} item={1} disabled={activePage === 1}/>\n        <PaginationItem label='<' onClickPage={onClickPage} item={activePage - 1} disabled={activePage === 1}/>\n        {activePage - 2 > 1 &&\n          <>\n            <PaginationItem label={1} onClickPage={onClickPage} item={1} />\n            <PaginationItem label='...' disabled={true} />\n          </>\n        }\n        {items}\n        {activePage + 2 < totalPages &&\n          <>\n            <PaginationItem label='...' disabled={true} />\n            <PaginationItem label={totalPages} onClickPage={onClickPage} item={totalPages} />\n          </>\n        }\n        <PaginationItem label='>' onClickPage={onClickPage} item={activePage + 1} disabled={activePage === totalPages}/>\n        <PaginationItem label='≫' onClickPage={onClickPage} item={totalPages} disabled={activePage === totalPages}/>\n      </ul>\n    </nav>\n  );\n};\n\nexport default withMovie(Pagination);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nfunction YearSelector(props) {\n  const { currentYear } = props.movie;\n  const { setCurrentYear, fetchMovies } = props.movieActions;\n  const yearList = [\n    2025,\n    2024,\n    2023,\n    2022,\n    2021,\n    2020,\n    2019,\n    2018,\n    2017,\n    2016,\n    2015,\n  ];\n\n  const onChangeYear = event => {\n    setCurrentYear(parseInt(event.target.value));\n    fetchMovies();\n  }\n\n  return (\n    <select className=\"custom-select custom-select mb-3 mt-3\" onChange={onChangeYear} value={currentYear}>\n      {\n        yearList.map(year => (\n          <option key={year} value={year}>{ year }</option>\n        ))\n      }\n    </select>\n  );\n}\n\nexport default withMovie(YearSelector);","import React from \"react\";\nimport { withMovie } from \"../../hoc/withMovie\";\n\nfunction GenreSelector(props) {\n  const { genres, genresSelected } = props.movie;\n  const { setSelectedGenres, fetchMovies } = props.movieActions;\n\n  const onChangeCheckbox = event => {\n    const {checked, value} = event.target;\n    setSelectedGenres({checked, value});\n    fetchMovies();\n  };\n  \n  return (\n    <div>\n      <h4>Select genres</h4>\n      {\n        genres.map(genre => (\n          <div className=\"form-group\" key={genre.id}>\n            <div className=\"form-check\">\n              <input className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"genres\"\n                value={genre.id}\n                id={genre.id}\n                onChange={onChangeCheckbox}\n                checked={genresSelected.includes(genre.id)}\n              />\n                <label className=\"form-check-label\" htmlFor={genre.id}>\n                  {genre.name}\n                </label>\n              </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default withMovie(GenreSelector);","import React, {useEffect} from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport MovieContainer from '../Movies/MovieContainer';\nimport MovieWillWatchContainer from '../Movies/MovieWillWatchContainer';\nimport MovieTabs from '../Movies/MovieTabs';\nimport Pagination from '../Pagination/Pagination';\nimport YearSelector from '../Filters/YearSelector';\nimport GenresSelector from '../Filters/GenresSelector';\n\nfunction MoviesPage(props) {\n  const { movies } = props.movie;\n  const { clearCurrentMovie, fetchGenres, fetchMovies, clearAllFilters } = props.movieActions;\n\n  useEffect(() => {\n    clearCurrentMovie();\n    fetchGenres();\n    fetchMovies();\n  }, []);\n\n  const handleClearFilters = () => {\n    clearAllFilters();\n    fetchMovies();\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3\">\n        <div className=\"col-8\">\n          <div className=\"row mb-3\">\n            <div className=\"col\">\n              <MovieTabs />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <MovieContainer movies={movies}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <Pagination />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <MovieWillWatchContainer />\n          <button className=\"btn btn-primary btn-block mt-3\" onClick={handleClearFilters}>Clear all filters</button>\n          <YearSelector />\n          <GenresSelector />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withMovie(MoviesPage);","import React, { useEffect } from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport { Card, CardText, CardGroup, CardImg, CardImgOverlay, Badge, Spinner } from 'reactstrap';\n\nimport noPoster from '../../img/no_poster.jpg';\n\nfunction MovieCredit(props) {\n  const { currentMovie, currentMovieActors, isLoading } = props.movie;\n\n  useEffect(() => {\n    props.movieActions.fetchMovieActorsById(currentMovie.id);\n  }, []);\n\n  const getPosterSrc = value => {\n    if (value) {\n      return `https://image.tmdb.org/t/p/w500${value}`;\n    }\n    return noPoster;\n  }\n\n  if (isLoading) {\n    return <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />;\n  }\n\n  if (currentMovieActors.length === 0) {\n    return <div></div>;\n  }\n\n  return (\n    <CardGroup className=\"mx-3\">\n      {currentMovieActors.map((actor, i) => (\n        <div key={i}>\n          <Card inverse style={{ maxWidth: '300px' }} >\n            <CardImg src={getPosterSrc(actor.profile_path)} alt={actor.name} />\n            <CardImgOverlay>\n              <CardText>\n                <Badge color=\"dark\" className=\"text-wrap\">{`${actor.character} / ${actor.name}`}</Badge>\n              </CardText>\n            </CardImgOverlay>\n          </Card>\n        </div>\n      ))}\n    </CardGroup>\n  );\n};\n\nexport default withMovie(MovieCredit);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport { Table, Badge } from 'reactstrap';\n\nfunction MovieDetail(props) {\n  const { currentMovie } = props.movie;\n\n  return (<Table>\n    <tbody>\n      <tr>\n        <td>Tagline</td>\n        <td>{currentMovie.tagline}</td>\n      </tr>\n      <tr>\n        <td>Rating</td>\n        <td><Badge color=\"success\">{`${currentMovie.vote_average} (${currentMovie.vote_count})`}</Badge></td>\n      </tr>\n      <tr>\n        <td>Genres</td>\n        <td>{\n          currentMovie.genres.map(genre => (<Badge key={genre.id} color=\"warning\" pill>{genre.name}</Badge>))\n        }</td>\n      </tr>\n      <tr>\n        <td>Runtime</td>\n        <td>{currentMovie.runtime} min</td>\n      </tr>\n      <tr>\n        <td>Status</td>\n        <td>{currentMovie.status}</td>\n      </tr>\n      <tr>\n        <td>Release date</td>\n        <td>{currentMovie.release_date}</td>\n      </tr>\n      <tr>\n        <td>Country</td>\n        <td>{\n          currentMovie.production_countries.map((country, i) => (<span key={i}>{country.name} </span>))\n        }</td>\n      </tr>\n    </tbody>\n  </Table>);\n};\n\nexport default withMovie(MovieDetail);","import React, {useEffect} from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport { Spinner } from 'reactstrap';\n\nfunction MovieVideo(props) {\n  const { currentMovie, currentMovieVideos, isLoading } = props.movie;\n\n  useEffect(() => {\n    props.movieActions.fetchMovieVideosById(currentMovie.id);\n  }, []);\n\n  if (isLoading) {\n    return <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />;\n  }\n\n  if (currentMovieVideos.length === 0) {\n    return <div></div>;\n  }\n\n  return (\n    <div className=\"row\">\n      { currentMovieVideos.map(video => (\n        <div key={video.id} className=\"col-3 mb-2\">\n          <a target=\"_blank\" href={`http://www.youtube.com/watch?v=${video.key}`} rel=\"noopener noreferrer\" >\n            <img className=\"img-fluid\" src={`https://img.youtube.com/vi/${video.key}/default.jpg`} alt={video.name} />\n          </a>\n        </div>\n      ))}\n    </div>);\n};\n\nexport default withMovie(MovieVideo);","import React, {useEffect} from 'react';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport { Nav, NavItem } from 'reactstrap';\nimport MovieCredit from '../Movie/MovieCredit';\nimport MovieDetail from '../Movie/MovieDetail';\nimport MovieVideo from '../Movie/MovieVideo';\nimport ActionIcons from '../UIComponents/ActionIcons';\n\nimport noPoster from '../../img/no_poster.jpg';\n\nfunction MoviePage(props) {\n\n  useEffect(() => {\n    const movieId = props.match.params.id;\n    props.movieActions.fetchMovieById(movieId);\n  }, []);\n\n  const { currentMovie } = props.movie;\n  if (currentMovie === null) {\n    return <div></div>;\n  }\n  const { title, overview, poster_path } = currentMovie;\n\n  const getPosterSrc = value => {\n    if (value) {\n      return `https://image.tmdb.org/t/p/w500${value}`;\n    }\n    return noPoster;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n\n          <div className=\"card mb-3\" >\n            <div className=\"row no-gutters\">\n              <div className=\"col-md-4\">\n                <img className=\"card-img-top\" src={getPosterSrc(poster_path)} alt={title} />\n              </div>\n              <div className=\"col-md-8\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title display-4 text-center\">{title}</h5>\n                  <p className=\"card-text\">{overview}</p>\n                  <ActionIcons currentMovie={currentMovie} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            <Nav tabs className=\"my-2\">\n              <NavItem>\n                <NavLink className=\"nav-link\" to={`/movie/${currentMovie.id}/detail`}>\n                  Details\n            </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to={`/movie/${currentMovie.id}/videos`}>\n                  Video\n            </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to={`/movie/${currentMovie.id}/credit`}>\n                  Credits\n            </NavLink>\n              </NavItem>\n            </Nav>\n            <Switch>\n              <Route path=\"/movie/:id/detail\"><MovieDetail /></Route>\n              <Route path=\"/movie/:id/videos\"><MovieVideo /></Route>\n              <Route path=\"/movie/:id/credit\"><MovieCredit /></Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withMovie(MoviePage);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\nimport MovieContainer from '../Movies/MovieContainer';\n\nfunction FavoritePage(props) {\n  const { moviesFavourite } = props.movie;\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <MovieContainer movies={moviesFavourite} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withMovie(FavoritePage);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\nimport MovieContainer from '../Movies/MovieContainer';\n\nfunction WillWatchPage(props) {\n  const { moviesWillWatch } = props.movie;\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <MovieContainer movies={moviesWillWatch} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withMovie(WillWatchPage);","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header/Header';\nimport Login from './Header/Login/Login'\nimport MoviesPage from './pages/MoviesPage';\nimport MoviePage from './pages/MoviePage';\nimport FavoritePage from './pages/FavoritePage';\nimport WillWatchPage from './pages/WillWatchPage';\n\nimport { withAuth } from '../hoc/withAuth';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    const { auth, authActions } = this.props;\n\n    if (auth.sessionId) {\n      authActions.fetchAuth(auth.sessionId);\n    } else {\n      authActions.toggleLoginModal();\n    }\n  }\n\n  render() {\n    const { auth } = this.props;\n    const { sessionId, isAuth, showLoginModal} = auth;\n\n    return isAuth || !sessionId ? (\n      <HashRouter basename='/'>\n        <Header />\n        { showLoginModal && <Login /> }\n        <Route exact path=\"/\"> <MoviesPage /></Route>\n        <Route path=\"/favorite\"> <FavoritePage /></Route>\n        <Route path=\"/willwatch\"> <WillWatchPage /></Route>\n        <Route path=\"/movie/:id\" render={(props) => <MoviePage {...props} />}\n        />\n      </HashRouter>\n    ) : (\n      <p>...Loading</p>\n    );\n  }\n}\n\nexport default withAuth(App);\n","import Cookies from \"universal-cookie\";\n\nexport const cookies = new Cookies();","import * as types from './authTypes';\nimport { cookies } from '../../utils/cookies';\n\nconst initialState = {\n  user: null,\n  sessionId: cookies.get('session_id'),\n  isAuth: false,\n  showLoginModal: false,\n  errors: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case types.FETCH_AUTH_SUCCESS:\n      return {\n        ...state,\n        user: payload.user,\n        sessionId: payload.session_id,\n        isAuth: true,\n      };\n\n    case types.REQUEST_LOGOUT_SUCCESS:\n      return {\n        ...state,\n        user: null,\n        sessionId: null,\n        isAuth: false,\n      };\n\n    case types.TOGGLE_LOGIN_MODAL:\n      return {\n        ...state,\n        showLoginModal: !state.showLoginModal,\n      };\n\n    case types.REQUEST_LOGIN_ERROR: \n      return {\n        ...state,\n        errors: {\n          base: payload.status_message,\n        },\n      };\n\n    case types.CLEAR_LOGIN_ERRORS:\n      return {\n        ...state,\n        errors: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","import * as types from './movieTypes';\n\nconst initialState = {\n  errors: null,\n  isLoading: false,\n  moviesFavourite: [],\n  moviesWillWatch: [],\n  movies: [],\n  genres: [],\n  genresSelected: [],\n  sortBy: 'popularity.desc',\n  currentYear: new Date().getFullYear(),\n  activePage: 1,\n  totalPages: 0,\n  currentMovie: null,\n  currentMovieVideos: [],\n  currentMovieActors: [],\n};\n\nconst movieReducer = (state = initialState, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case types.START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    \n    case types.STOP_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    case types.UPDATE_MOVIES_FAVORITE:\n      return {\n        ...state,\n        moviesFavourite: payload,\n      };\n\n    case types.UPDATE_MOVIES_WILL_WATCH:\n      return {\n        ...state,\n        moviesWillWatch: payload,\n      };\n\n    case types.FETCH_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: payload,\n      };\n\n    case types.FETCH_GENRES_ERROR:\n      return {\n        ...state,\n        errors: payload,\n      };\n\n    case types.FETCH_MOVIES_SUCCESS:\n      return {\n        ...state,\n        movies: payload.movies,\n        totalPages: payload.totalPages,\n      };\n\n    case types.SET_SORT_BY:\n      return {\n        ...state,\n        sortBy: payload,\n        activePage: 1,\n      };\n\n    case types.SET_CURRENT_YEAR:\n      return {\n        ...state,\n        currentYear: payload,\n        activePage: 1,\n      };\n\n    case types.SET_SELECTED_GENRES:\n      return {\n        ...state,\n        genresSelected: payload,\n        activePage: 1,\n      };\n\n    case types.SET_ACTIVE_PAGE:\n      return {\n        ...state,\n        activePage: payload,\n      };\n\n    case types.CLEAR_ALL_FILTERS:\n      return {\n        ...state,\n        genresSelected: [],\n        sortBy: 'popularity.desc',\n        activePage: 1,\n        currentYear: 2020,\n      };\n\n    case types.FETCH_MOVIE_BY_ID_SUCCESS:\n      return {\n        ...state,\n        currentMovie: payload,\n      };\n\n    case types.CLEAR_CURRENT_MOVIE:\n      return {\n        ...state,\n        currentMovie: null,\n        currentMovieVideos: [],\n        currentMovieActors: [],\n      };\n\n    case types.FETCH_MOVIE_BY_ID_ERROR:\n      return {\n        ...state,\n        errors: payload,\n      };\n\n    case types.FETCH_MOVIE_VIDEOS_BY_ID_SUCCESS:\n      return {\n        ...state,\n        currentMovieVideos: payload,\n      };\n\n    case types.FETCH_MOVIE_ACTORS_BY_ID_SUCCESS:\n      return {\n        ...state,\n        currentMovieActors: payload,\n      };\n\n    case types.CLEAR_ALL_USER_DATA:\n      return {\n        ...state,\n        moviesFavourite: [],\n        moviesWillWatch: [],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;","import { combineReducers } from 'redux';\nimport authReducer from './auth/authReducers';\nimport movieReducer from './movie/movieReducers';\n\nexport default combineReducers({\n  auth: authReducer,\n  movie: movieReducer,\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n// addition for redux debug\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { cookies } from '../utils/cookies';\nimport rootReducer from './rootReducer';\nimport { FETCH_AUTH_SUCCESS, REQUEST_LOGOUT_SUCCESS } from \"./auth/authTypes\";\n\nconst updateCookies = ({ dispatch, getState }) => next => action => {\n  if (action.type === FETCH_AUTH_SUCCESS) {\n    cookies.set('session_id', action.payload.session_id, {\n      path: '/',\n      maxAge: 2592000\n    });\n  }\n\n  if (action.type === REQUEST_LOGOUT_SUCCESS) {\n    cookies.remove('session_id');\n  }\n\n  return next(action);\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk, updateCookies)\n  )\n);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport './stylesheets/index.css';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}