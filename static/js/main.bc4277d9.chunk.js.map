{"version":3,"sources":["img/no_poster.jpg","img/no_poster_album.jpg","api/api.js","redux/movie/movieActions.js","redux/movie/movieTypes.js","redux/auth/authActions.js","redux/auth/authTypes.js","hoc/withAuth.jsx","hoc/withMovie.jsx","components/Header/UserMenu.jsx","components/Header/Header.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/UIComponents/ActionIcons.jsx","components/Movies/MovieCard.jsx","components/Movies/MovieContainer.jsx","components/Movies/MovieWillWatchContainer.jsx","components/Movies/MovieTabs.jsx","components/Pagination/PaginationItem.jsx","components/Pagination/Pagination.jsx","components/Filters/YearSelector.jsx","components/Filters/GenresSelector.jsx","components/pages/MoviesPage.jsx","components/Movie/MovieCredit.jsx","components/Movie/MovieDetail.jsx","components/Movie/MovieVideo.jsx","components/pages/MoviePage.jsx","components/pages/FavoritePage.jsx","components/pages/WillWatchPage.jsx","components/App.jsx","utils/cookies.js","redux/auth/authReducers.js","redux/movie/movieReducers.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","API_URL","process","API_KEY","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","data","catch","res","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","startLoading","dispatch","type","stopLoading","clearAllUserData","fetchMoviesFavorite","user","session_id","get","id","updateMoviesFavorite","results","movies","payload","fetchMoviesWillWatch","updateMoviesWillWatch","fetchGenres","genres","fetchMovies","page","getState","movie","sortBy","currentYear","genresSelected","forEach","el","sort_by","primary_release_year","with_genres","totalPages","total_pages","setSortBy","value","setCurrentYear","setActivePage","setSelectedGenres","checked","newGenres","push","parseInt","filter","clearAllFilters","setFavouriteMovie","favorite","auth","sessionId","moviesFavourite","post","media_type","media_id","newMoviesFavourite","status_code","m","setWatchList","watchlist","moviesWillWatch","newMoviesWillWatch","fetchMovieById","clearCurrentMovie","fetchMovieVideosById","fetchMovieActorsById","cast","login","username","password","a","token","request_token","tokenWithLogin","session","fetchAuth","console","log","updateAuth","userLogout","delete","logout","toggleLoginModal","clearLoginErrors","mapStateToProps","state","mapDispatchToProps","authActions","bindActionCreators","withAuth","Component","connect","this","props","React","movieActions","withMovie","dropdownOpen","toggle","setState","prevState","handleLogOut","Dropdown","isOpen","DropdownToggle","tag","data-toggle","aria-expanded","onClick","className","alt","src","avatar","gravatar","hash","DropdownMenu","right","DropdownItem","to","repeatPassword","errors","submitting","onChangeInput","event","name","target","base","handleBlur","validateFields","length","onLogin","preventDefault","Object","keys","sendPromisesAsync","htmlFor","placeholder","onChange","onBlur","disabled","Modal","showLoginModal","ModalBody","currentMovie","isInArray","array","map","find","isFavourite","inWatchList","Favorite","color","FavoriteBorder","Bookmark","BookmarkBorder","MovieCard","title","backdrop_path","overview","vote_average","noPoster","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","key","index","list","onChangeSortBy","Pagination","label","active","onClickPage","item","activePage","items","minPage","Math","max","maxPage","min","year","onChangeCheckbox","genre","includes","useEffect","GenresSelector","currentMovieActors","isLoading","Spinner","style","width","height","CardGroup","actor","i","Card","inverse","maxWidth","CardImg","profile_path","CardImgOverlay","CardText","Badge","character","Table","tagline","vote_count","pill","runtime","release_date","production_countries","country","currentMovieVideos","video","href","rel","movieId","match","poster_path","Nav","tabs","NavItem","path","isAuth","basename","exact","render","cookies","Cookies","initialState","authReducer","action","status_message","Date","getFullYear","movieReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","next","set","maxAge","remove","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bc4277d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_poster.a9af4f3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no_poster_album.8d55f821.jpg\";","import queryString from 'query-string';\n\nconst API_URL = process.env.REACT_APP_API_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then(response => {\n        if (response.status < 400) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(data => {\n        resolve(data);\n      })\n      .catch(res => {\n        // reject(response);\n        res.json().then(error => {\n          reject(error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, options = {}) {\n    const {params = {}} = options;\n\n    const queryStringParams = {\n      api_key: API_KEY,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    });\n  }\n\n  static post(url, options = {}) {\n    const {params = {}, body = {}} = options;\n\n    const queryStringParams = {\n      api_key: API_KEY,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    });\n  }\n\n  static delete(url, options = {}) {\n    const {params = {}, body = {}} = options;\n\n    const queryStringParams = {\n      api_key: API_KEY,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    });\n  }\n}","import * as types from './movieTypes';\nimport CallApi from \"../../api/api\";\n\nexport const startLoading = () => dispatch => {\n  dispatch({type: types.START_LOADING});\n}\n\nexport const stopLoading = () => dispatch => {\n  dispatch({type: types.STOP_LOADING});\n}\n\nexport const clearAllUserData = () => dispatch => {\n  dispatch({type: types.CLEAR_ALL_USER_DATA});\n}\n\nexport const fetchMoviesFavorite = ({ user, session_id }) => dispatch => {\n  CallApi.get(`/account/${user.id}/favorite/movies`, {\n    params: {\n      session_id,\n    }\n  }).then(data => {\n    dispatch(updateMoviesFavorite(data.results));\n  });\n};\n\nexport const updateMoviesFavorite = movies => {\n  return {\n    type: types.UPDATE_MOVIES_FAVORITE,\n    payload: movies,\n  };\n};\n\nexport const fetchMoviesWillWatch = ({ user, session_id }) => dispatch => {\n  CallApi.get(`/account/${user.id}/watchlist/movies`, {\n    params: {\n      session_id,\n    }\n  }).then(data => {\n    dispatch(updateMoviesWillWatch(data.results));\n  });\n};\n\nexport const updateMoviesWillWatch = movies => {\n  return {\n    type: types.UPDATE_MOVIES_WILL_WATCH,\n    payload: movies,\n  };\n};\n\nexport const fetchGenres = () => dispatch => {\n  dispatch({\n    type: types.FETCH_GENRES,\n  });\n\n  CallApi.get('/genre/movie/list')\n    .then(data => \n      dispatch({\n        type: types.FETCH_GENRES_SUCCESS,\n        payload: data.genres,\n      })\n    ).catch(error =>\n      dispatch({\n        type: types.FETCH_GENRES_ERROR,\n        payload: error,\n      })\n    );\n}\n\nexport const fetchMovies = (page = 1) => (dispatch, getState) => {\n  dispatch({\n    type: types.FETCH_MOVIES,\n  });\n\n  const { sortBy, currentYear, genresSelected } = getState().movie;\n  let genres = '';\n  genresSelected.forEach(el => genres += el + ',');\n\n  const queryStringParams = {\n    sort_by: sortBy,\n    page: page,\n    primary_release_year: currentYear,\n    with_genres: genres\n  };\n\n  CallApi.get('/discover/movie', { params: queryStringParams })\n    .then(data => \n      dispatch({\n        type: types.FETCH_MOVIES_SUCCESS,\n        payload: {\n          movies: data.results,\n          totalPages: data.total_pages\n        }\n      })\n    ).catch(error =>\n      dispatch({\n        type: types.FETCH_MOVIES_ERROR,\n        payload: error,\n      })\n    );\n}\n\nexport const setSortBy = value => dispatch => {\n  dispatch({\n    type: types.SET_SORT_BY,\n    payload: value,\n  });\n}\n\nexport const setCurrentYear = value => dispatch => {\n  dispatch({\n    type: types.SET_CURRENT_YEAR,\n    payload: value,\n  });\n}\n\nexport const setActivePage = value => dispatch => {\n  dispatch({\n    type: types.SET_ACTIVE_PAGE,\n    payload: value,\n  });\n}\n\nexport const setSelectedGenres = ({checked, value}) => (dispatch, getState) => {\n  let newGenres = [...getState().movie.genresSelected];\n  if (checked) {\n    newGenres.push(parseInt(value));\n  } else {\n    newGenres = getState().movie.genresSelected.filter(el => el !== parseInt(value));\n  }\n\n  dispatch({\n    type: types.SET_SELECTED_GENRES,\n    payload: newGenres,\n  });\n}\n\nexport const clearAllFilters = value => dispatch => {\n  dispatch({\n    type: types.CLEAR_ALL_FILTERS,\n  });\n}\n\nexport const setFavouriteMovie = (movie, favorite) => (dispatch, getState) => {\n  const { user, sessionId } = getState().auth;\n  const { moviesFavourite } = getState().movie;\n  CallApi.post(`/account/${user.id}/favorite`, {\n    params: {\n      session_id: sessionId\n    },\n    body: {\n      media_type: 'movie',\n      media_id: movie.id,\n      favorite: favorite,\n    },\n  }).then((res) => {\n    if (res.status_code === 1 || res.status_code === 13) {\n      let newMoviesFavourite;\n      if (!favorite) {\n        newMoviesFavourite = moviesFavourite.filter(m => m.id !== movie.id);\n      } else {\n        newMoviesFavourite = [...moviesFavourite];\n        newMoviesFavourite.push(movie);\n      }\n      dispatch(updateMoviesFavorite(newMoviesFavourite));\n    }\n  });\n}\n\nexport const setWatchList = (movie, watchlist) => (dispatch, getState) => {\n  const {user, sessionId} = getState().auth;\n  const { moviesWillWatch } = getState().movie;\n  CallApi.post(`/account/${user.id}/watchlist`, {\n    params: {\n      session_id: sessionId\n    },\n    body: {\n      media_type: 'movie',\n      media_id: movie.id,\n      watchlist: watchlist,\n    },\n  }).then((res) => {\n    if (res.status_code === 1 || res.status_code === 13) {\n      let newMoviesWillWatch;\n      if (!watchlist) {\n        newMoviesWillWatch = moviesWillWatch.filter(m => m.id !== movie.id);\n      } else {\n        newMoviesWillWatch = [...moviesWillWatch];\n        newMoviesWillWatch.push(movie);\n      }\n      dispatch(updateMoviesWillWatch(newMoviesWillWatch));\n    }\n  });\n}\n\nexport const fetchMovieById = id => dispatch => {\n  dispatch({\n    type: types.START_LOADING,\n  });\n  dispatch({\n    type: types.FETCH_MOVIE_BY_ID,\n  });\n\n  CallApi.get(`/movie/${id}`)\n    .then(data => {\n      dispatch({\n        type: types.FETCH_MOVIE_BY_ID_SUCCESS,\n        payload: data,\n      });\n      dispatch({\n        type: types.STOP_LOADING,\n      });\n    }).catch(error => {\n      dispatch({\n        type: types.FETCH_MOVIE_BY_ID_ERROR,\n        payload: error,\n      });\n      dispatch({\n        type: types.STOP_LOADING,\n      });\n    });\n}\n\nexport const clearCurrentMovie = () => dispatch => {\n  dispatch({\n    type: types.CLEAR_CURRENT_MOVIE,\n  });\n}\n\nexport const fetchMovieVideosById = id => dispatch => {\n  dispatch({\n    type: types.START_LOADING,\n  });\n\n  dispatch({\n    type: types.FETCH_MOVIE_VIDEOS_BY_ID,\n  });\n\n  CallApi.get(`/movie/${id}/videos`)\n    .then(data => {\n      dispatch({\n        type: types.FETCH_MOVIE_VIDEOS_BY_ID_SUCCESS,\n        payload: data.results,\n      });\n      dispatch({\n        type: types.STOP_LOADING,\n      });\n    }).catch(error => \n      dispatch({\n        type: types.FETCH_MOVIE_VIDEOS_BY_ID_ERROR,\n        payload: error,\n      })\n    );\n}\n\nexport const fetchMovieActorsById = id => dispatch => {\n  dispatch({\n    type: types.START_LOADING,\n  });\n\n  dispatch({\n    type: types.FETCH_MOVIE_ACTORS_BY_ID,\n  });\n\n  CallApi.get(`/movie/${id}/credits`)\n    .then(data => {\n      dispatch({\n        type: types.FETCH_MOVIE_ACTORS_BY_ID_SUCCESS,\n        payload: data.cast,\n      });\n      dispatch({\n        type: types.STOP_LOADING,\n      });\n    }).catch(error => \n      dispatch({\n        type: types.FETCH_MOVIE_ACTORS_BY_ID_ERROR,\n        payload: error,\n      })\n    );\n}","export const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\nexport const UPDATE_MOVIES_FAVORITE = 'UPDATE_MOVIES_FAVORITE';\nexport const UPDATE_MOVIES_WILL_WATCH = 'UPDATE_MOVIES_WILL_WATCH';\nexport const FETCH_GENRES = 'FETCH_GENRES';\nexport const FETCH_GENRES_SUCCESS = 'FETCH_GENRES_SUCCESS';\nexport const FETCH_GENRES_ERROR = 'FETCH_GENRES_ERROR';\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\nexport const SET_SORT_BY = 'SET_SORT_BY';\nexport const SET_CURRENT_YEAR = 'SET_CURRENT_YEAR';\nexport const SET_ACTIVE_PAGE = 'SET_ACTIVE_PAGE';\nexport const SET_SELECTED_GENRES = 'SET_SELECTED_GENRES';\nexport const CLEAR_ALL_FILTERS = 'CLEAR_ALL_FILTERS';\nexport const FETCH_MOVIE_BY_ID = 'FETCH_MOVIE_BY_ID';\nexport const FETCH_MOVIE_BY_ID_SUCCESS = 'FETCH_MOVIE_BY_ID_SUCCESS';\nexport const FETCH_MOVIE_BY_ID_ERROR = 'FETCH_MOVIE_BY_ID_ERROR';\nexport const CLEAR_CURRENT_MOVIE = 'CLEAR_CURRENT_MOVIE';\nexport const FETCH_MOVIE_VIDEOS_BY_ID = 'FETCH_MOVIE_VIDEOS_BY_ID';\nexport const FETCH_MOVIE_VIDEOS_BY_ID_SUCCESS = 'FETCH_MOVIE_VIDEOS_BY_ID_SUCCESS';\nexport const FETCH_MOVIE_VIDEOS_BY_ID_ERROR = 'FETCH_MOVIE_VIDEOS_BY_ID_ERROR';\nexport const FETCH_MOVIE_ACTORS_BY_ID = 'FETCH_MOVIE_ACTORS_BY_ID';\nexport const FETCH_MOVIE_ACTORS_BY_ID_SUCCESS = 'FETCH_MOVIE_ACTORS_BY_ID_SUCCESS';\nexport const FETCH_MOVIE_ACTORS_BY_ID_ERROR = 'FETCH_MOVIE_ACTORS_BY_ID_ERROR';\nexport const CLEAR_ALL_USER_DATA = 'CLEAR_ALL_USER_DATA';","import * as types from './authTypes';\nimport CallApi from \"../../api/api\";\nimport { fetchMoviesFavorite, fetchMoviesWillWatch } from '../movie/movieActions';\n\nexport const login = ({username, password}) => async dispatch => {\n  try {\n    dispatch({\n      type: types.REQUEST_LOGIN,\n    });\n\n    const token = await CallApi.get('/authentication/token/new');\n    const tokenWithLogin = await CallApi.post('/authentication/token/validate_with_login', {\n      body: {\n        username: username,\n        password: password,\n        request_token: token.request_token,\n      }\n    });\n\n    const session = await CallApi.post('/authentication/session/new', {\n      body: {\n        request_token: tokenWithLogin.request_token,\n      }\n    });\n\n    dispatch(fetchAuth(session.session_id));\n  } catch (error) {\n    dispatch({\n      type: types.REQUEST_LOGIN_ERROR,\n      payload: error,\n    });\n    console.log('error', error);\n  }\n}\n\nexport const fetchAuth = session_id => dispatch => {\n  dispatch({\n    type: types.FETCH_REQUEST_AUTH,\n  });\n\n  CallApi.get('/account', {\n    params: {\n      session_id,\n    }\n  }).then(user => {\n    dispatch(updateAuth({ user, session_id }));\n    dispatch(fetchMoviesFavorite({ user, session_id }));\n    dispatch(fetchMoviesWillWatch({ user, session_id }));\n  }).catch(error => {\n    dispatch({\n      type: types.FETCH_AUTH_ERROR,\n      payload: error,\n    });\n  });\n};\n\nexport const updateAuth = ({ user, session_id }) => ({\n  type: types.FETCH_AUTH_SUCCESS,\n  payload: {\n    user,\n    session_id,\n  }\n});\n\nexport const userLogout = session_id => dispatch => {\n  dispatch({\n    type: types.REQUEST_LOGOUT,\n  });\n\n  CallApi.delete('/authentication/session', { body: { session_id }})\n    .then(() => dispatch(logout()))\n    .catch(error => {\n      dispatch({\n        type: types.REQUEST_LOGOUT_ERROR,\n        payload: error,\n      });\n    });\n}\n\nexport const logout = () => {\n  return {\n    type: types.REQUEST_LOGOUT_SUCCESS,\n  };\n};\n\nexport const toggleLoginModal = () => {\n  return {\n    type: types.TOGGLE_LOGIN_MODAL,\n  };\n};\n\nexport const clearLoginErrors = () => {\n  return {\n    type: types.CLEAR_LOGIN_ERRORS,\n  };\n}","export const UPDATE_AUTH = 'UPDATE_AUTH';\nexport const TOGGLE_LOGIN_MODAL = 'TOGGLE_LOGIN_MODAL';\nexport const FETCH_REQUEST_AUTH = 'FETCH_REQUEST_AUTH';\nexport const FETCH_AUTH_SUCCESS = 'FETCH_AUTH_SUCCESS';\nexport const FETCH_AUTH_ERROR = 'FETCH_AUTH_ERROR';\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT';\nexport const REQUEST_LOGOUT_ERROR = 'REQUEST_LOGOUT_ERROR';\nexport const REQUEST_LOGOUT_SUCCESS = 'REQUEST_LOGOUT_SUCCESS';\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\nexport const REQUEST_LOGIN_ERROR = 'REQUEST_LOGIN_ERROR';\nexport const REQUEST_LOGIN_SUCCESS = 'REQUEST_LOGIN_SUCCESS';\nexport const CLEAR_LOGIN_ERRORS = 'CLEAR_LOGIN_ERRORS';","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as authActions from '../redux/auth/authActions';\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authActions: bindActionCreators(authActions, dispatch),\n});\n\nexport const withAuth = Component =>\n  connect(mapStateToProps, mapDispatchToProps)(\n    class WithAuth extends React.Component {\n      render() {\n        return (<Component {...this.props} />);\n      };\n    });","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as movieActions from '../redux/movie/movieActions';\n\nconst mapStateToProps = state => {\n  return {\n    movie: state.movie,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  movieActions: bindActionCreators(movieActions, dispatch),\n});\n\nexport const withMovie = Component =>\n  connect(mapStateToProps, mapDispatchToProps)(\n    class WithMovie extends React.Component {\n      render() {\n        return (<Component {...this.props} />);\n      };\n    });","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuth } from '../../hoc/withAuth';\nimport { withMovie } from '../../hoc/withMovie';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass UserMenu extends React.Component {\n  state = {\n    dropdownOpen: false,\n  }\n\n  toggle = () => {\n    this.setState(\n      prevState => ({\n        dropdownOpen: !prevState.dropdownOpen,\n      })\n    );\n  }\n\n  handleLogOut = () => {\n    this.props.authActions.userLogout(this.props.auth.sessionId);\n    this.props.movieActions.clearAllUserData();\n  }\n\n  render() {\n    const {dropdownOpen} = this.state;\n    const {auth: { user }} = this.props;\n    return (\n      <Dropdown isOpen={dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle\n          tag=\"div\"\n          data-toggle=\"dropdown\"\n          aria-expanded={dropdownOpen}\n        >\n          <div onClick={this.toggle}>\n            <img\n              className=\"rounded mr-2\"\n              alt=\"avatar\"\n              src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=32\"`}\n              />\n            <span className=\"text-light\">{user.username}</span>\n          </div>\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem onClick={this.handleLogOut}>\n            Logout\n          </DropdownItem>\n          <DropdownItem onClick={this.toggle}>\n            <Link to={'/favorite'}>My favorite movies</Link>\n          </DropdownItem>\n          <DropdownItem onClick={this.toggle}>\n            <Link to={'/willwatch'}>My will watch list</Link>\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default withAuth(withMovie(UserMenu));","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withAuth } from '../../hoc/withAuth';\nimport UserMenu from './UserMenu';\n\nfunction Header(props) {\n  const { auth, authActions } = props;\n  return (\n    <nav className=\"navbar sticky-top navbar-dark bg-dark\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/\">Home</Link>\n        </li>\n      </ul>\n      { auth.user\n        ? <UserMenu />\n        : <button\n            className=\"btn btn-outline-primary my-2 my-sm-0\"\n            type=\"button\"\n            onClick={authActions.toggleLoginModal}\n          >\n            Log in\n          </button> }\n    </nav>\n  );\n}\n\nexport default withAuth(Header);","import React from 'react';\nimport { withAuth } from '../../../hoc/withAuth';\n\nclass LoginForm extends React.Component {\n\n  state = {\n    username: '',\n    password: '',\n    repeatPassword: '',\n    errors: {},\n    submitting: false,\n  }\n\n  onChangeInput = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n\t\tthis.setState(prevState => ({ \n      [name]: value,\n      errors: {\n        ...prevState.errors,\n        base: null,\n        [name]: null,\n      }\n    }));\n  }\n\n  handleBlur = (event) => {\n    const {name} = event.target;\n    const errors = this.validateFields();\n    const error = errors[name];\n\n    if (error) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          [name]: error,\n        }\n      }));\n    }\n    this.props.authActions.clearLoginErrors();\n  }\n  \n  validateFields = () => {\n    const errors = {};\n\n    if (this.state.username === '') {\n      errors.username = 'Username is required';\n    }\n    if (this.state.password === '') {\n      errors.password = 'Password is required';\n    }\n\n    if (this.state.password.length < 5) {\n      errors.password = 'Your password it too small';\n    }\n    // Unnecessary field\n    // if (this.state.repeatPassword !== this.state.password) {\n    //   errors.repeatPassword = 'Passwords should be equal';\n    // }\n\n    return errors;\n  }\n\n  onLogin = event => {\n    event.preventDefault();\n    let errors = this.validateFields();\n    if (Object.keys(errors).length > 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors\n        }\n      }));\n    } else {\n      this.sendPromisesAsync();\n    }\n  }\n\n  // Send requests in async style\n  sendPromisesAsync = () => {\n    const { username, password } = this.state;\n    this.setState({submitting: true});\n    \n    this.props.authActions.login({username, password})\n      .then(() => {\n        if (this.props.auth.errors) {\n          this.setState({\n            submitting: false,\n            errors: {\n              base: this.props.auth.errors.base\n            }\n          });\n        } else {\n          this.setState({submitting: false});\n          this.props.authActions.toggleLoginModal();\n        }\n    });\n  }\n\n  render() {\n    const {username, password, repeatPassword, errors, submitting} = this.state;\n    return (\n      <div>\n        <h1>Log into your account</h1>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            className={errors.username ? \"form-control invalid\" : \"form-control\"}\n            placeholder=\"username\"\n            name=\"username\"\n            value={username}\n            onChange={this.onChangeInput}\n            onBlur={this.handleBlur}\n          />\n          {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            className={errors.password ? \"form-control invalid\" : \"form-control\"}\n            placeholder=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.onChangeInput}\n            onBlur={this.handleBlur}\n          />\n          {errors.password && <div className=\"invalid-feedback\">{errors.password}</div> }\n        </div>\n        {/* <div className=\"form-group\">\n          <label htmlFor=\"repeatPassword\">Repeat Password</label>\n          <input\n            id=\"repeatPassword\"\n            type=\"password\"\n            className={errors.repeatPassword ? \"form-control invalid\" : \"form-control\"}\n            placeholder=\"repeatPassword\"\n            name=\"repeatPassword\"\n            value={repeatPassword}\n            onChange={this.onChangeInput}\n            onBlur={this.handleBlur}\n          />\n          {errors.repeatPassword && <div className=\"invalid-feedback\">{errors.repeatPassword}</div> }\n    </div> */}\n        <button\n          className=\"btn btn-block btn-primary my-2 my-sm-0\"\n          type=\"submit\"\n          disabled={submitting}\n          onClick={this.onLogin}\n        >\n          Log in\n        </button>\n        {errors.base && <div className=\"invalid-feedback text-center\">{errors.base}</div> }\n      </div>\n    );\n  }\n}\n\nexport default withAuth(LoginForm);","import React from 'react';\n\nimport { Modal, ModalBody } from 'reactstrap';\nimport LoginForm from './LoginForm';\nimport { withAuth } from '../../../hoc/withAuth';\n\nfunction Login(props) {\n  const { auth, authActions } = props;\n  \n  return (\n    <Modal isOpen={auth.showLoginModal} toggle={authActions.toggleLoginModal}>\n      <ModalBody>\n        <LoginForm />\n      </ModalBody>\n    </Modal>\n  );\n}\n\nexport default withAuth(Login);","import React from 'react';\nimport { withAuth } from '../../hoc/withAuth';\nimport { withMovie } from '../../hoc/withMovie';\nimport { Favorite, FavoriteBorder, Bookmark, BookmarkBorder } from '@material-ui/icons';\n\nfunction ActionIcons(props) {\n  const { currentMovie } = props;\n  const { user } = props.auth;\n  const { moviesFavourite, moviesWillWatch } = props.movie;\n  const { setWatchList, setFavouriteMovie } = props.movieActions;\n\n  const isInArray = (movie, array) => {\n    if (array.map(m => m.id).find(el => el === movie.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  let isFavourite = isInArray(currentMovie, moviesFavourite);\n  let inWatchList = isInArray(currentMovie, moviesWillWatch);\n\n  return user ? \n    (<div>\n      {isFavourite &&\n        <Favorite color=\"secondary\" className=\"icon\" onClick={() => setFavouriteMovie(currentMovie, false)} />\n      }\n      {!isFavourite &&\n        <FavoriteBorder color=\"secondary\" className=\"icon\" onClick={() => setFavouriteMovie(currentMovie, true)} />\n      }\n      {inWatchList &&\n        <Bookmark className=\"icon\" onClick={() => setWatchList(currentMovie, false)} />\n      }\n      {!inWatchList &&\n        <BookmarkBorder className=\"icon\" onClick={() => setWatchList(currentMovie, true)} />\n      }\n    </div>) : (<></>);\n};\n\nexport default withAuth(withMovie(ActionIcons));","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport ActionIcons from '../UIComponents/ActionIcons';\n\nimport noPoster from '../../img/no_poster_album.jpg';\n\nfunction MovieCard(props) {\n  const { movie } = props;\n  const { title, backdrop_path, overview, vote_average, id } = movie;\n\n  const getPosterSrc = value => {\n    if (value) {\n      return `https://image.tmdb.org/t/p/w500${value}`;\n    }\n    return noPoster;\n  }\n\n  return (\n    <div className=\"card\">\n      <img className=\"card-img-top\" src={getPosterSrc(backdrop_path)} alt={title} />\n      <div className=\"card-body\">\n        <div className=\"card-title\">\n          <Link to={`/movie/${id}/detail`}>{title}</Link>\n          <span className=\"badge badge-warning\">{vote_average}</span>\n        </div>\n        <ActionIcons currentMovie={movie} />\n        <button type=\"button\"\n          className=\"btn btn-block btn-outline-dark mt-2\"\n          data-toggle=\"modal\"\n          data-target={`#itemModal-${id}`}\n        >\n          About\n        </button>\n      </div>\n      <div id={`itemModal-${id}`} className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby={`#modalTitle-${id}`} aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id={`#modalTitle-${id}`}>{title}</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>{overview}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\nimport MovieCard from './MovieCard';\n\nfunction MovieContainer(props) {\n  const { movies } = props;\n  return (\n    <div className=\"row\">\n      {\n        movies.map(movie => {\n          return (\n            <div key={movie.id} className=\"col-12 mb-4 col-sm-6 col-lg-4\">\n              <MovieCard movie={movie} />\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default withMovie(MovieContainer);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withMovie } from '../../hoc/withMovie';\n\nfunction MovieWillWatchContainer(props) {\n  const { moviesWillWatch } = props.movie;\n  return (\n    <div>\n      <h4>Will watch {moviesWillWatch.length} movies</h4>\n      <ul className=\"list-group\">\n        { moviesWillWatch.map((movie, index) => {\n            return (\n              <li key={index} className=\"list-group-item\">\n                <Link to={`/movie/${movie.id}/detail`}>{movie.title}</Link>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default withMovie(MovieWillWatchContainer);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nfunction MovieTabs(props) {\n  const sortList = [\n    {\n      title: 'Popularity desc',\n      sortBy: 'popularity.desc',\n    },\n    {\n      title: 'Revenue desc',\n      sortBy: 'revenue.desc',\n    },\n    {\n      title: 'Release date desc',\n      sortBy: 'release_date.desc',\n    }\n  ];\n  const { sortBy } = props.movie;\n  const { setSortBy, fetchMovies } = props.movieActions;\n\n  const onChangeSortBy = value => {\n    setSortBy(value);\n    fetchMovies();\n  }\n\n  const getClassName = value => {\n    return `nav-link ${sortBy === value ? 'active' : ''}`;\n  }\n\n  return (\n    <ul className=\"nav nav-tabs nav-pills\">\n      {\n        sortList.map(list => {\n          return (\n            <li key={list.sortBy} className=\"nav-item\">\n              <div\n                className={getClassName(list.sortBy)}\n                onClick={() => onChangeSortBy(list.sortBy)}\n              >\n                {list.title}\n              </div>\n            </li>\n          )\n        })\n      }\n    </ul>\n  );\n};\n\nexport default withMovie(MovieTabs);","import React from \"react\";\n\nexport default function Pagination(props) {\n  const { label, active, disabled, onClickPage, item } = props;\n\n  const getClassName = () => {\n    return `page-item\n      ${active ? 'active' : ''}\n      ${disabled ? 'disabled' : ''}\n      `;\n  }\n\n  return (\n    <li className={getClassName()} >\n      <button className=\"page-link\" onClick={() => onClickPage(item)}>\n        {label}\n      </button>\n    </li>);\n}","import React from \"react\";\nimport PaginationItem from './PaginationItem';\nimport { withMovie } from \"../../hoc/withMovie\";\n\nfunction Pagination(props) {\n  let { activePage, totalPages } = props.movie;\n  let { setActivePage, fetchMovies } = props.movieActions;\n  let items = [];\n  let minPage = Math.max(activePage - 2, 1);\n  let maxPage = Math.min(activePage + 2, totalPages);\n\n  const onClickPage = (page) => {\n    setActivePage(page);\n    fetchMovies(page);\n  }\n\n  for (let page = minPage; page <= maxPage; page++) {\n    items.push(\n      <PaginationItem\n        active={page === activePage}\n        key={page}\n        label={page}\n        onClickPage={onClickPage}\n        item={page}\n      />\n    );\n  }\n\n  return (\n    <nav aria-label=\"Page navigation\">\n      <ul className=\"pagination\">\n        <PaginationItem label='≪' onClickPage={onClickPage} item={1} disabled={activePage === 1}/>\n        <PaginationItem label='<' onClickPage={onClickPage} item={activePage - 1} disabled={activePage === 1}/>\n        {activePage - 2 > 1 &&\n          <>\n            <PaginationItem label={1} onClickPage={onClickPage} item={1} />\n            <PaginationItem label='...' disabled={true} />\n          </>\n        }\n        {items}\n        {activePage + 2 < totalPages &&\n          <>\n            <PaginationItem label='...' disabled={true} />\n            <PaginationItem label={totalPages} onClickPage={onClickPage} item={totalPages} />\n          </>\n        }\n        <PaginationItem label='>' onClickPage={onClickPage} item={activePage + 1} disabled={activePage === totalPages}/>\n        <PaginationItem label='≫' onClickPage={onClickPage} item={totalPages} disabled={activePage === totalPages}/>\n      </ul>\n    </nav>\n  );\n};\n\nexport default withMovie(Pagination);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nfunction YearSelector(props) {\n  const { currentYear } = props.movie;\n  const { setCurrentYear, fetchMovies } = props.movieActions;\n  const yearList = [\n    2025,\n    2024,\n    2023,\n    2022,\n    2021,\n    2020,\n    2019,\n    2018,\n    2017,\n    2016,\n    2015,\n  ];\n\n  const onChangeYear = event => {\n    setCurrentYear(parseInt(event.target.value));\n    fetchMovies();\n  }\n\n  return (\n    <select className=\"custom-select custom-select mb-3 mt-3\" onChange={onChangeYear} value={currentYear}>\n      {\n        yearList.map(year => (\n          <option key={year} value={year}>{ year }</option>\n        ))\n      }\n    </select>\n  );\n}\n\nexport default withMovie(YearSelector);","import React from \"react\";\nimport { withMovie } from \"../../hoc/withMovie\";\n\nfunction GenreSelector(props) {\n  const { genres, genresSelected } = props.movie;\n  const { setSelectedGenres, fetchMovies } = props.movieActions;\n\n  const onChangeCheckbox = event => {\n    const {checked, value} = event.target;\n    setSelectedGenres({checked, value});\n    fetchMovies();\n  };\n  \n  return (\n    <div>\n      <h4>Select genres</h4>\n      {\n        genres.map(genre => (\n          <div className=\"form-group\" key={genre.id}>\n            <div className=\"form-check\">\n              <input className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"genres\"\n                value={genre.id}\n                id={genre.id}\n                onChange={onChangeCheckbox}\n                checked={genresSelected.includes(genre.id)}\n              />\n                <label className=\"form-check-label\" htmlFor={genre.id}>\n                  {genre.name}\n                </label>\n              </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default withMovie(GenreSelector);","import React, {useEffect} from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport MovieContainer from '../Movies/MovieContainer';\nimport MovieWillWatchContainer from '../Movies/MovieWillWatchContainer';\nimport MovieTabs from '../Movies/MovieTabs';\nimport Pagination from '../Pagination/Pagination';\nimport YearSelector from '../Filters/YearSelector';\nimport GenresSelector from '../Filters/GenresSelector';\n\nfunction MoviesPage(props) {\n  const { movies } = props.movie;\n  const { clearCurrentMovie, fetchGenres, fetchMovies, clearAllFilters } = props.movieActions;\n\n  useEffect(() => {\n    clearCurrentMovie();\n    fetchGenres();\n    fetchMovies();\n  }, []);\n\n  const handleClearFilters = () => {\n    clearAllFilters();\n    fetchMovies();\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3\">\n        <div className=\"col-8\">\n          <div className=\"row mb-3\">\n            <div className=\"col\">\n              <MovieTabs />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <MovieContainer movies={movies}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <Pagination />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <MovieWillWatchContainer />\n          <button className=\"btn btn-primary btn-block mt-3\" onClick={handleClearFilters}>Clear all filters</button>\n          <YearSelector />\n          <GenresSelector />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withMovie(MoviesPage);","import React, { useEffect } from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport { Card, CardText, CardGroup, CardImg, CardImgOverlay, Badge, Spinner } from 'reactstrap';\n\nimport noPoster from '../../img/no_poster.jpg';\n\nfunction MovieCredit(props) {\n  const { currentMovie, currentMovieActors, isLoading } = props.movie;\n\n  useEffect(() => {\n    props.movieActions.fetchMovieActorsById(currentMovie.id);\n  }, []);\n\n  const getPosterSrc = value => {\n    if (value) {\n      return `https://image.tmdb.org/t/p/w500${value}`;\n    }\n    return noPoster;\n  }\n\n  if (isLoading) {\n    return <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />;\n  }\n\n  if (currentMovieActors.length === 0) {\n    return <div></div>;\n  }\n\n  return (\n    <CardGroup className=\"mx-3\">\n      {currentMovieActors.map((actor, i) => (\n        <div key={i}>\n          <Card inverse style={{ maxWidth: '300px' }} >\n            <CardImg src={getPosterSrc(actor.profile_path)} alt={actor.name} />\n            <CardImgOverlay>\n              <CardText>\n                <Badge color=\"dark\" className=\"text-wrap\">{`${actor.character} / ${actor.name}`}</Badge>\n              </CardText>\n            </CardImgOverlay>\n          </Card>\n        </div>\n      ))}\n    </CardGroup>\n  );\n};\n\nexport default withMovie(MovieCredit);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport { Table, Badge } from 'reactstrap';\n\nfunction MovieDetail(props) {\n  const { currentMovie } = props.movie;\n\n  return (<Table>\n    <tbody>\n      <tr>\n        <td>Tagline</td>\n        <td>{currentMovie.tagline}</td>\n      </tr>\n      <tr>\n        <td>Rating</td>\n        <td><Badge color=\"success\">{`${currentMovie.vote_average} (${currentMovie.vote_count})`}</Badge></td>\n      </tr>\n      <tr>\n        <td>Genres</td>\n        <td>{\n          currentMovie.genres.map(genre => (<Badge key={genre.id} color=\"warning\" pill>{genre.name}</Badge>))\n        }</td>\n      </tr>\n      <tr>\n        <td>Runtime</td>\n        <td>{currentMovie.runtime} min</td>\n      </tr>\n      <tr>\n        <td>Status</td>\n        <td>{currentMovie.status}</td>\n      </tr>\n      <tr>\n        <td>Release date</td>\n        <td>{currentMovie.release_date}</td>\n      </tr>\n      <tr>\n        <td>Country</td>\n        <td>{\n          currentMovie.production_countries.map((country, i) => (<span key={i}>{country.name} </span>))\n        }</td>\n      </tr>\n    </tbody>\n  </Table>);\n};\n\nexport default withMovie(MovieDetail);","import React, {useEffect} from 'react';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport { Spinner } from 'reactstrap';\n\nfunction MovieVideo(props) {\n  const { currentMovie, currentMovieVideos, isLoading } = props.movie;\n\n  useEffect(() => {\n    props.movieActions.fetchMovieVideosById(currentMovie.id);\n  }, []);\n\n  if (isLoading) {\n    return <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />;\n  }\n\n  if (currentMovieVideos.length === 0) {\n    return <div></div>;\n  }\n\n  return (\n    <div className=\"row\">\n      { currentMovieVideos.map(video => (\n        <div key={video.id} className=\"col-3 mb-2\">\n          <a target=\"_blank\" href={`http://www.youtube.com/watch?v=${video.key}`} rel=\"noopener noreferrer\" >\n            <img className=\"img-fluid\" src={`https://img.youtube.com/vi/${video.key}/default.jpg`} alt={video.name} />\n          </a>\n        </div>\n      ))}\n    </div>);\n};\n\nexport default withMovie(MovieVideo);","import React, {useEffect} from 'react';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport { withMovie } from '../../hoc/withMovie';\n\nimport { Nav, NavItem } from 'reactstrap';\nimport MovieCredit from '../Movie/MovieCredit';\nimport MovieDetail from '../Movie/MovieDetail';\nimport MovieVideo from '../Movie/MovieVideo';\nimport ActionIcons from '../UIComponents/ActionIcons';\n\nimport noPoster from '../../img/no_poster.jpg';\n\nfunction MoviePage(props) {\n\n  useEffect(() => {\n    const movieId = props.match.params.id;\n    props.movieActions.fetchMovieById(movieId);\n  }, []);\n\n  const { currentMovie } = props.movie;\n  if (currentMovie === null) {\n    return <div></div>;\n  }\n  const { title, overview, poster_path } = currentMovie;\n\n  const getPosterSrc = value => {\n    if (value) {\n      return `https://image.tmdb.org/t/p/w500${value}`;\n    }\n    return noPoster;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n\n          <div className=\"card mb-3\" >\n            <div className=\"row no-gutters\">\n              <div className=\"col-md-4\">\n                <img className=\"card-img-top\" src={getPosterSrc(poster_path)} alt={title} />\n              </div>\n              <div className=\"col-md-8\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title display-4 text-center\">{title}</h5>\n                  <p className=\"card-text\">{overview}</p>\n                  <ActionIcons currentMovie={currentMovie} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            <Nav tabs className=\"my-2\">\n              <NavItem>\n                <NavLink className=\"nav-link\" to={`/movie/${currentMovie.id}/detail`}>\n                  Details\n            </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to={`/movie/${currentMovie.id}/videos`}>\n                  Video\n            </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to={`/movie/${currentMovie.id}/credit`}>\n                  Credits\n            </NavLink>\n              </NavItem>\n            </Nav>\n            <Switch>\n              <Route path=\"/movie/:id/detail\"><MovieDetail /></Route>\n              <Route path=\"/movie/:id/videos\"><MovieVideo /></Route>\n              <Route path=\"/movie/:id/credit\"><MovieCredit /></Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withMovie(MoviePage);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\nimport MovieContainer from '../Movies/MovieContainer';\n\nfunction FavoritePage(props) {\n  const { moviesFavourite } = props.movie;\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <MovieContainer movies={moviesFavourite} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withMovie(FavoritePage);","import React from 'react';\nimport { withMovie } from '../../hoc/withMovie';\nimport MovieContainer from '../Movies/MovieContainer';\n\nfunction WillWatchPage(props) {\n  const { moviesWillWatch } = props.movie;\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <MovieContainer movies={moviesWillWatch} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withMovie(WillWatchPage);","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header/Header';\nimport Login from './Header/Login/Login'\nimport MoviesPage from './pages/MoviesPage';\nimport MoviePage from './pages/MoviePage';\nimport FavoritePage from './pages/FavoritePage';\nimport WillWatchPage from './pages/WillWatchPage';\n\nimport { withAuth } from '../hoc/withAuth';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    const { auth, authActions } = this.props;\n\n    if (auth.sessionId) {\n      authActions.fetchAuth(auth.sessionId);\n    } else {\n      authActions.toggleLoginModal();\n    }\n  }\n\n  render() {\n    const { auth } = this.props;\n    const { sessionId, isAuth, showLoginModal} = auth;\n\n    return isAuth || !sessionId ? (\n      <HashRouter basename='/'>\n        <Header />\n        { showLoginModal && <Login /> }\n        <Route exact path=\"/\"> <MoviesPage /></Route>\n        <Route path=\"/favorite\"> <FavoritePage /></Route>\n        <Route path=\"/willwatch\"> <WillWatchPage /></Route>\n        <Route path=\"/movie/:id\" render={(props) => <MoviePage {...props} />}\n        />\n      </HashRouter>\n    ) : (\n      <p>...Loading</p>\n    );\n  }\n}\n\nexport default withAuth(App);\n","import Cookies from \"universal-cookie\";\n\nexport const cookies = new Cookies();","import * as types from './authTypes';\nimport { cookies } from '../../utils/cookies';\n\nconst initialState = {\n  user: null,\n  sessionId: cookies.get('session_id'),\n  isAuth: false,\n  showLoginModal: false,\n  errors: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case types.FETCH_AUTH_SUCCESS:\n      return {\n        ...state,\n        user: payload.user,\n        sessionId: payload.session_id,\n        isAuth: true,\n      };\n\n    case types.REQUEST_LOGOUT_SUCCESS:\n      return {\n        ...state,\n        user: null,\n        sessionId: null,\n        isAuth: false,\n      };\n\n    case types.TOGGLE_LOGIN_MODAL:\n      return {\n        ...state,\n        showLoginModal: !state.showLoginModal,\n      };\n\n    case types.REQUEST_LOGIN_ERROR: \n      return {\n        ...state,\n        errors: {\n          base: payload.status_message,\n        },\n      };\n\n    case types.CLEAR_LOGIN_ERRORS:\n      return {\n        ...state,\n        errors: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","import * as types from './movieTypes';\n\nconst initialState = {\n  errors: null,\n  isLoading: false,\n  moviesFavourite: [],\n  moviesWillWatch: [],\n  movies: [],\n  genres: [],\n  genresSelected: [],\n  sortBy: 'popularity.desc',\n  currentYear: new Date().getFullYear(),\n  activePage: 1,\n  totalPages: 0,\n  currentMovie: null,\n  currentMovieVideos: [],\n  currentMovieActors: [],\n};\n\nconst movieReducer = (state = initialState, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case types.START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    \n    case types.STOP_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    case types.UPDATE_MOVIES_FAVORITE:\n      return {\n        ...state,\n        moviesFavourite: payload,\n      };\n\n    case types.UPDATE_MOVIES_WILL_WATCH:\n      return {\n        ...state,\n        moviesWillWatch: payload,\n      };\n\n    case types.FETCH_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: payload,\n      };\n\n    case types.FETCH_GENRES_ERROR:\n      return {\n        ...state,\n        errors: payload,\n      };\n\n    case types.FETCH_MOVIES_SUCCESS:\n      return {\n        ...state,\n        movies: payload.movies,\n        totalPages: payload.totalPages,\n      };\n\n    case types.SET_SORT_BY:\n      return {\n        ...state,\n        sortBy: payload,\n        activePage: 1,\n      };\n\n    case types.SET_CURRENT_YEAR:\n      return {\n        ...state,\n        currentYear: payload,\n        activePage: 1,\n      };\n\n    case types.SET_SELECTED_GENRES:\n      return {\n        ...state,\n        genresSelected: payload,\n        activePage: 1,\n      };\n\n    case types.SET_ACTIVE_PAGE:\n      return {\n        ...state,\n        activePage: payload,\n      };\n\n    case types.CLEAR_ALL_FILTERS:\n      return {\n        ...state,\n        genresSelected: [],\n        sortBy: 'popularity.desc',\n        activePage: 1,\n        currentYear: 2020,\n      };\n\n    case types.FETCH_MOVIE_BY_ID_SUCCESS:\n      return {\n        ...state,\n        currentMovie: payload,\n      };\n\n    case types.CLEAR_CURRENT_MOVIE:\n      return {\n        ...state,\n        currentMovie: null,\n        currentMovieVideos: [],\n        currentMovieActors: [],\n      };\n\n    case types.FETCH_MOVIE_BY_ID_ERROR:\n      return {\n        ...state,\n        errors: payload,\n      };\n\n    case types.FETCH_MOVIE_VIDEOS_BY_ID_SUCCESS:\n      return {\n        ...state,\n        currentMovieVideos: payload,\n      };\n\n    case types.FETCH_MOVIE_ACTORS_BY_ID_SUCCESS:\n      return {\n        ...state,\n        currentMovieActors: payload,\n      };\n\n    case types.CLEAR_ALL_USER_DATA:\n      return {\n        ...state,\n        moviesFavourite: [],\n        moviesWillWatch: [],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;","import { combineReducers } from 'redux';\nimport authReducer from './auth/authReducers';\nimport movieReducer from './movie/movieReducers';\n\nexport default combineReducers({\n  auth: authReducer,\n  movie: movieReducer,\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n// addition for redux debug\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { cookies } from '../utils/cookies';\nimport rootReducer from './rootReducer';\nimport { FETCH_AUTH_SUCCESS, REQUEST_LOGOUT_SUCCESS } from \"./auth/authTypes\";\n\nconst updateCookies = ({ dispatch, getState }) => next => action => {\n  if (action.type === FETCH_AUTH_SUCCESS) {\n    cookies.set('session_id', action.payload.session_id, {\n      path: '/',\n      maxAge: 2592000\n    });\n  }\n\n  if (action.type === REQUEST_LOGOUT_SUCCESS) {\n    cookies.remove('session_id');\n  }\n\n  return next(action);\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk, updateCookies)\n  )\n);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport './stylesheets/index.css';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}